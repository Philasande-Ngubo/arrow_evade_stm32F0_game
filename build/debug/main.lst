ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB45:
  28              		.file 2 "Core/Inc/lcd_stm32f0.c"
   1:Core/Inc/lcd_stm32f0.c **** //********************************************************************
   2:Core/Inc/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Inc/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Inc/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Inc/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Inc/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Inc/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
   9:Core/Inc/lcd_stm32f0.c **** //* PORTED:	   2014						     *
  10:Core/Inc/lcd_stm32f0.c **** //* MODIFIED:      03-08-2015                                        *
  11:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  12:Core/Inc/lcd_stm32f0.c **** //* PROGRAMMED IN: ECLIPSE IDE Luna Service Release 1 (4.4.1)        *
  13:Core/Inc/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  14:Core/Inc/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C6                    *
  15:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  16:Core/Inc/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  17:Core/Inc/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  18:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  19:Core/Inc/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  20:Core/Inc/lcd_stm32f0.c **** //*                - Two lines used                                  *
  21:Core/Inc/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  22:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  23:Core/Inc/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  24:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  25:Core/Inc/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  26:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  27:Core/Inc/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  28:Core/Inc/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  29:Core/Inc/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
  30:Core/Inc/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 2


  31:Core/Inc/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
  32:Core/Inc/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  33:Core/Inc/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  34:Core/Inc/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  35:Core/Inc/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  36:Core/Inc/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  37:Core/Inc/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  38:Core/Inc/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  39:Core/Inc/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  40:Core/Inc/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  41:Core/Inc/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  42:Core/Inc/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  43:Core/Inc/lcd_stm32f0.c **** //********************************************************************
  44:Core/Inc/lcd_stm32f0.c **** // INCLUDE FILES
  45:Core/Inc/lcd_stm32f0.c **** //====================================================================
  46:Core/Inc/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  47:Core/Inc/lcd_stm32f0.c **** #include "stm32f0xx.h"
  48:Core/Inc/lcd_stm32f0.c **** //====================================================================
  49:Core/Inc/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  50:Core/Inc/lcd_stm32f0.c **** //====================================================================
  51:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  52:Core/Inc/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  53:Core/Inc/lcd_stm32f0.c **** //
  54:Core/Inc/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  55:Core/Inc/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  56:Core/Inc/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  57:Core/Inc/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  58:Core/Inc/lcd_stm32f0.c **** //              These sets must be transmitted
  59:Core/Inc/lcd_stm32f0.c **** //====================================================================
  60:Core/Inc/lcd_stm32f0.c **** // USEFUL COMMANDS:
  61:Core/Inc/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  62:Core/Inc/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  63:Core/Inc/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  64:Core/Inc/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  65:Core/Inc/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  66:Core/Inc/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  67:Core/Inc/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  68:Core/Inc/lcd_stm32f0.c **** //
  69:Core/Inc/lcd_stm32f0.c **** //====================================================================
  70:Core/Inc/lcd_stm32f0.c **** 
  71:Core/Inc/lcd_stm32f0.c **** void lcd_command(unsigned char command)
  72:Core/Inc/lcd_stm32f0.c **** {
  73:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
  74:Core/Inc/lcd_stm32f0.c **** 
  75:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
  76:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
  77:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x80) != 0)		// Select bit 7 of command, if HIGH set Data line 7 (D7) 
  78:Core/Inc/lcd_stm32f0.c ****     {
  79:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
  80:Core/Inc/lcd_stm32f0.c ****     }
  81:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
  82:Core/Inc/lcd_stm32f0.c ****     {
  83:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
  84:Core/Inc/lcd_stm32f0.c ****     }
  85:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
  86:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x40) != 0)		// Select bit 6 of command, if HIGH set Data line 6 (D6) 
  87:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 3


  88:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
  89:Core/Inc/lcd_stm32f0.c ****     }
  90:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D6
  91:Core/Inc/lcd_stm32f0.c ****     {
  92:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
  93:Core/Inc/lcd_stm32f0.c ****     }
  94:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
  95:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x20) != 0)		// Select bit 5 of command, if HIGH set Data line 5 (D5)
  96:Core/Inc/lcd_stm32f0.c ****     {
  97:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;	
  98:Core/Inc/lcd_stm32f0.c ****     }
  99:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D5
 100:Core/Inc/lcd_stm32f0.c ****     {
 101:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 102:Core/Inc/lcd_stm32f0.c ****     }
 103:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 104:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x10) != 0)		// Select bit 4 of command, if HIGH set Data line 4 (D4)
 105:Core/Inc/lcd_stm32f0.c ****     {
 106:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 107:Core/Inc/lcd_stm32f0.c ****     }
 108:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 109:Core/Inc/lcd_stm32f0.c ****     {
 110:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 111:Core/Inc/lcd_stm32f0.c ****     }
 112:Core/Inc/lcd_stm32f0.c **** 
 113:Core/Inc/lcd_stm32f0.c ****     pulse_strobe ();			// Send data
 114:Core/Inc/lcd_stm32f0.c **** 
 115:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 116:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x08) != 0)		// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 117:Core/Inc/lcd_stm32f0.c ****     {
 118:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
 119:Core/Inc/lcd_stm32f0.c ****     }
 120:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
 121:Core/Inc/lcd_stm32f0.c ****     {
 122:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
 123:Core/Inc/lcd_stm32f0.c ****     }
 124:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 125:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x04) != 0)		// Select bit 2 of command, if HIGH set Data line 6 (D6)
 126:Core/Inc/lcd_stm32f0.c ****     {
 127:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
 128:Core/Inc/lcd_stm32f0.c ****     }
 129:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D6
 130:Core/Inc/lcd_stm32f0.c ****     {
 131:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
 132:Core/Inc/lcd_stm32f0.c ****     }
 133:Core/Inc/lcd_stm32f0.c ****     // DATALINE 5
 134:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x02) != 0)		// Select bit 1 of command, if HIGH set Data line 5 (D5)
 135:Core/Inc/lcd_stm32f0.c ****     {
 136:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;         
 137:Core/Inc/lcd_stm32f0.c ****     }
 138:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D5
 139:Core/Inc/lcd_stm32f0.c ****     {
 140:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 141:Core/Inc/lcd_stm32f0.c ****     }
 142:Core/Inc/lcd_stm32f0.c ****     // DATALINE 4
 143:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x01) != 0)		// Select bit 0 of command, if HIGH set Data line 4 (D4)
 144:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 4


 145:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 146:Core/Inc/lcd_stm32f0.c ****     }
 147:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 148:Core/Inc/lcd_stm32f0.c ****     {
 149:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 150:Core/Inc/lcd_stm32f0.c ****     }
 151:Core/Inc/lcd_stm32f0.c **** 
 152:Core/Inc/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 153:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 154:Core/Inc/lcd_stm32f0.c **** }
 155:Core/Inc/lcd_stm32f0.c **** 
 156:Core/Inc/lcd_stm32f0.c **** //====================================================================
 157:Core/Inc/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
 158:Core/Inc/lcd_stm32f0.c **** //====================================================================
 159:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
 160:Core/Inc/lcd_stm32f0.c **** //              intialises the module for use.
 161:Core/Inc/lcd_stm32f0.c **** //====================================================================
 162:Core/Inc/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
 163:Core/Inc/lcd_stm32f0.c **** //                - Two lines used
 164:Core/Inc/lcd_stm32f0.c **** //                - Flashing cursor
 165:Core/Inc/lcd_stm32f0.c **** //====================================================================
 166:Core/Inc/lcd_stm32f0.c **** 
 167:Core/Inc/lcd_stm32f0.c **** void init_LCD(void)
 168:Core/Inc/lcd_stm32f0.c **** {
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 171:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 172:Core/Inc/lcd_stm32f0.c **** 
 173:Core/Inc/lcd_stm32f0.c ****     GPIOA->MODER |= (GPIO_MODER_MODER12_0|GPIO_MODER_MODER15_0); // D6 and D7
 174:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 175:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 176:Core/Inc/lcd_stm32f0.c **** 
 177:Core/Inc/lcd_stm32f0.c ****     delay(30000);			// Allow the LCD some power up time (~30ms)
 178:Core/Inc/lcd_stm32f0.c **** 
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 183:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 184:Core/Inc/lcd_stm32f0.c **** }
 185:Core/Inc/lcd_stm32f0.c **** 
 186:Core/Inc/lcd_stm32f0.c **** //====================================================================
 187:Core/Inc/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 188:Core/Inc/lcd_stm32f0.c **** //====================================================================
 189:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 190:Core/Inc/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 191:Core/Inc/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 192:Core/Inc/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 193:Core/Inc/lcd_stm32f0.c **** //
 194:Core/Inc/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 195:Core/Inc/lcd_stm32f0.c **** //              set information.
 196:Core/Inc/lcd_stm32f0.c **** //====================================================================
 197:Core/Inc/lcd_stm32f0.c **** 
 198:Core/Inc/lcd_stm32f0.c ****  void lcd_putchar(unsigned char character)
 199:Core/Inc/lcd_stm32f0.c **** {
 200:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 201:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 5


 202:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
 203:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x80) != 0) 	// Select bit 7 of command, if HIGH set Data line 7 (D7)
 204:Core/Inc/lcd_stm32f0.c ****         {
 205:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 206:Core/Inc/lcd_stm32f0.c ****         }
 207:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D7
 208:Core/Inc/lcd_stm32f0.c ****         {
 209:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 210:Core/Inc/lcd_stm32f0.c ****         }
 211:Core/Inc/lcd_stm32f0.c ****         // DATALINE 6
 212:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x40) != 0)	// Select bit 6 of command, if HIGH set Data line 6 (D6)      
 213:Core/Inc/lcd_stm32f0.c **** 	{
 214:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 215:Core/Inc/lcd_stm32f0.c ****         }
 216:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D6
 217:Core/Inc/lcd_stm32f0.c **** 
 218:Core/Inc/lcd_stm32f0.c ****         {
 219:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 220:Core/Inc/lcd_stm32f0.c ****         }
 221:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 222:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x20) != 0)	// Select bit 5 of command, if HIGH set Data line 5 (D5)
 223:Core/Inc/lcd_stm32f0.c **** 
 224:Core/Inc/lcd_stm32f0.c ****         {
 225:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;                 
 226:Core/Inc/lcd_stm32f0.c **** 	}
 227:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D5
 228:Core/Inc/lcd_stm32f0.c ****         {
 229:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 230:Core/Inc/lcd_stm32f0.c ****         }
 231:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 232:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x10) != 0)	// Select bit 4 of command, if HIGH set Data line 4 (D4) 
 233:Core/Inc/lcd_stm32f0.c ****         {
 234:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 235:Core/Inc/lcd_stm32f0.c ****         }
 236:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D4
 237:Core/Inc/lcd_stm32f0.c ****         {
 238:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 239:Core/Inc/lcd_stm32f0.c ****         }
 240:Core/Inc/lcd_stm32f0.c **** 
 241:Core/Inc/lcd_stm32f0.c ****         pulse_strobe ();		// Send data
 242:Core/Inc/lcd_stm32f0.c **** 
 243:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 244:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x08) != 0)	// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 245:Core/Inc/lcd_stm32f0.c ****         {
 246:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 247:Core/Inc/lcd_stm32f0.c ****         }
 248:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D7
 249:Core/Inc/lcd_stm32f0.c ****         {
 250:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 251:Core/Inc/lcd_stm32f0.c ****         }
 252:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 253:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x04) != 0)	// Select bit 2 of command, if HIGH set Data line 6 (D6)      
 254:Core/Inc/lcd_stm32f0.c **** 	{
 255:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 256:Core/Inc/lcd_stm32f0.c ****         }
 257:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D6
 258:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 6


 259:Core/Inc/lcd_stm32f0.c ****         {
 260:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 261:Core/Inc/lcd_stm32f0.c ****         }
 262:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 263:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x02) != 0)	// Select bit 1 of command, if HIGH set Data line 5 (D5)  
 264:Core/Inc/lcd_stm32f0.c ****         {
 265:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;       
 266:Core/Inc/lcd_stm32f0.c **** 	}
 267:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D5
 268:Core/Inc/lcd_stm32f0.c ****         {
 269:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 270:Core/Inc/lcd_stm32f0.c ****         }
 271:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 272:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x01) != 0)	// Select bit 0 of command, if HIGH set Data line 4 (D4)
 273:Core/Inc/lcd_stm32f0.c ****         {
 274:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 275:Core/Inc/lcd_stm32f0.c ****         }
 276:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D4
 277:Core/Inc/lcd_stm32f0.c ****         {
 278:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 279:Core/Inc/lcd_stm32f0.c ****         }
 280:Core/Inc/lcd_stm32f0.c **** 
 281:Core/Inc/lcd_stm32f0.c ****         pulse_strobe();			// Send data
 282:Core/Inc/lcd_stm32f0.c **** }
 283:Core/Inc/lcd_stm32f0.c **** 
 284:Core/Inc/lcd_stm32f0.c **** //====================================================================
 285:Core/Inc/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 286:Core/Inc/lcd_stm32f0.c **** //====================================================================
 287:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 288:Core/Inc/lcd_stm32f0.c **** //====================================================================
 289:Core/Inc/lcd_stm32f0.c **** 
 290:Core/Inc/lcd_stm32f0.c **** void lcd_putstring(char *instring)
 291:Core/Inc/lcd_stm32f0.c **** {
 292:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 293:Core/Inc/lcd_stm32f0.c **** 
 294:Core/Inc/lcd_stm32f0.c ****     while (instring[count])		// Until the null terminator is reached
 295:Core/Inc/lcd_stm32f0.c ****     {
 296:Core/Inc/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 297:Core/Inc/lcd_stm32f0.c **** 	    count++;
 298:Core/Inc/lcd_stm32f0.c **** 	 }
 299:Core/Inc/lcd_stm32f0.c **** }
 300:Core/Inc/lcd_stm32f0.c **** 
 301:Core/Inc/lcd_stm32f0.c **** 
 302:Core/Inc/lcd_stm32f0.c **** //====================================================================
 303:Core/Inc/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 304:Core/Inc/lcd_stm32f0.c **** //====================================================================
 305:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 306:Core/Inc/lcd_stm32f0.c **** //====================================================================
 307:Core/Inc/lcd_stm32f0.c **** 
 308:Core/Inc/lcd_stm32f0.c **** void pulse_strobe(void)
 309:Core/Inc/lcd_stm32f0.c **** {
 310:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 311:Core/Inc/lcd_stm32f0.c **** 
 312:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 313:Core/Inc/lcd_stm32f0.c **** 
 314:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 315:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 7


 316:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
 317:Core/Inc/lcd_stm32f0.c **** 
 318:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 319:Core/Inc/lcd_stm32f0.c **** 
 320:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 321:Core/Inc/lcd_stm32f0.c **** }
 322:Core/Inc/lcd_stm32f0.c **** 
 323:Core/Inc/lcd_stm32f0.c **** 
 324:Core/Inc/lcd_stm32f0.c **** //====================================================================
 325:Core/Inc/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 326:Core/Inc/lcd_stm32f0.c **** //====================================================================
 327:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 328:Core/Inc/lcd_stm32f0.c **** //====================================================================
 329:Core/Inc/lcd_stm32f0.c **** 
 330:Core/Inc/lcd_stm32f0.c **** void delay(unsigned int microseconds)
 331:Core/Inc/lcd_stm32f0.c **** {
  29              		.loc 2 331 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 2 331 1 is_stmt 0 view .LVU1
  35 0000 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 8
 332:Core/Inc/lcd_stm32f0.c **** 	  volatile unsigned int counter;
  37              		.loc 2 332 4 is_stmt 1 view .LVU2
 333:Core/Inc/lcd_stm32f0.c **** 	  microseconds *= 3;
  38              		.loc 2 333 4 view .LVU3
  39              		.loc 2 333 17 is_stmt 0 view .LVU4
  40 0002 4300     		lsls	r3, r0, #1
  41 0004 1818     		adds	r0, r3, r0
  42              	.LVL1:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  43              		.loc 2 334 4 is_stmt 1 view .LVU5
  44              		.loc 2 334 16 is_stmt 0 view .LVU6
  45 0006 0023     		movs	r3, #0
  46 0008 0193     		str	r3, [sp, #4]
  47              		.loc 2 334 4 view .LVU7
  48 000a 04E0     		b	.L2
  49              	.L3:
 335:Core/Inc/lcd_stm32f0.c **** 	  {
 336:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  50              		.loc 2 336 6 is_stmt 1 view .LVU8
  51              		.syntax divided
  52              	@ 336 "Core/Inc/lcd_stm32f0.c" 1
  53 000c C046     		nop
  54              	@ 0 "" 2
 337:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  55              		.loc 2 337 6 view .LVU9
  56              	@ 337 "Core/Inc/lcd_stm32f0.c" 1
  57 000e C046     		nop
  58              	@ 0 "" 2
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  59              		.loc 2 334 50 discriminator 3 view .LVU10
  60              		.thumb
  61              		.syntax unified
  62 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 8


  63 0012 0133     		adds	r3, r3, #1
  64 0014 0193     		str	r3, [sp, #4]
  65              	.L2:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  66              		.loc 2 334 28 discriminator 1 view .LVU11
  67 0016 019B     		ldr	r3, [sp, #4]
  68 0018 8342     		cmp	r3, r0
  69 001a F7D3     		bcc	.L3
 338:Core/Inc/lcd_stm32f0.c **** 	  }
 339:Core/Inc/lcd_stm32f0.c **** }
  70              		.loc 2 339 1 is_stmt 0 view .LVU12
  71 001c 02B0     		add	sp, sp, #8
  72              		@ sp needed
  73 001e 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE45:
  77              		.section	.text.pulse_strobe,"ax",%progbits
  78              		.align	1
  79              		.global	pulse_strobe
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  84              	pulse_strobe:
  85              	.LFB44:
 309:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
  86              		.loc 2 309 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 4, -16
  93              		.cfi_offset 5, -12
  94              		.cfi_offset 6, -8
  95              		.cfi_offset 14, -4
 310:Core/Inc/lcd_stm32f0.c **** 
  96              		.loc 2 310 5 view .LVU14
  97 0002 1420     		movs	r0, #20
  98 0004 FFF7FEFF 		bl	delay
  99              	.LVL2:
 312:Core/Inc/lcd_stm32f0.c **** 
 100              		.loc 2 312 5 view .LVU15
 312:Core/Inc/lcd_stm32f0.c **** 
 101              		.loc 2 312 10 is_stmt 0 view .LVU16
 102 0008 0A4C     		ldr	r4, .L5
 103 000a A369     		ldr	r3, [r4, #24]
 312:Core/Inc/lcd_stm32f0.c **** 
 104              		.loc 2 312 17 view .LVU17
 105 000c 8025     		movs	r5, #128
 106 000e 2D02     		lsls	r5, r5, #8
 107 0010 2B43     		orrs	r3, r5
 108 0012 A361     		str	r3, [r4, #24]
 314:Core/Inc/lcd_stm32f0.c **** 
 109              		.loc 2 314 5 is_stmt 1 view .LVU18
 110 0014 1420     		movs	r0, #20
 111 0016 FFF7FEFF 		bl	delay
 112              	.LVL3:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 9


 316:Core/Inc/lcd_stm32f0.c **** 
 113              		.loc 2 316 5 view .LVU19
 316:Core/Inc/lcd_stm32f0.c **** 
 114              		.loc 2 316 10 is_stmt 0 view .LVU20
 115 001a A269     		ldr	r2, [r4, #24]
 316:Core/Inc/lcd_stm32f0.c **** 
 116              		.loc 2 316 17 view .LVU21
 117 001c 8023     		movs	r3, #128
 118 001e 1B06     		lsls	r3, r3, #24
 119 0020 1343     		orrs	r3, r2
 120 0022 A361     		str	r3, [r4, #24]
 318:Core/Inc/lcd_stm32f0.c **** 
 121              		.loc 2 318 5 is_stmt 1 view .LVU22
 122 0024 1420     		movs	r0, #20
 123 0026 FFF7FEFF 		bl	delay
 124              	.LVL4:
 320:Core/Inc/lcd_stm32f0.c **** }
 125              		.loc 2 320 5 view .LVU23
 320:Core/Inc/lcd_stm32f0.c **** }
 126              		.loc 2 320 10 is_stmt 0 view .LVU24
 127 002a A369     		ldr	r3, [r4, #24]
 320:Core/Inc/lcd_stm32f0.c **** }
 128              		.loc 2 320 17 view .LVU25
 129 002c 1D43     		orrs	r5, r3
 130 002e A561     		str	r5, [r4, #24]
 321:Core/Inc/lcd_stm32f0.c **** 
 131              		.loc 2 321 1 view .LVU26
 132              		@ sp needed
 133 0030 70BD     		pop	{r4, r5, r6, pc}
 134              	.L6:
 135 0032 C046     		.align	2
 136              	.L5:
 137 0034 00080048 		.word	1207961600
 138              		.cfi_endproc
 139              	.LFE44:
 141              		.section	.text.lcd_putchar,"ax",%progbits
 142              		.align	1
 143              		.global	lcd_putchar
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	lcd_putchar:
 149              	.LVL5:
 150              	.LFB42:
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 151              		.loc 2 199 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 155              		.loc 2 199 1 is_stmt 0 view .LVU28
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 160 0002 0400     		movs	r4, r0
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 10


 161              		.loc 2 200 2 is_stmt 1 view .LVU29
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 162              		.loc 2 200 7 is_stmt 0 view .LVU30
 163 0004 454A     		ldr	r2, .L25
 164 0006 9169     		ldr	r1, [r2, #24]
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 165              		.loc 2 200 14 view .LVU31
 166 0008 8023     		movs	r3, #128
 167 000a DB01     		lsls	r3, r3, #7
 168 000c 0B43     		orrs	r3, r1
 169 000e 9361     		str	r3, [r2, #24]
 203:Core/Inc/lcd_stm32f0.c ****         {
 170              		.loc 2 203 9 is_stmt 1 view .LVU32
 203:Core/Inc/lcd_stm32f0.c ****         {
 171              		.loc 2 203 32 is_stmt 0 view .LVU33
 172 0010 43B2     		sxtb	r3, r0
 203:Core/Inc/lcd_stm32f0.c ****         {
 173              		.loc 2 203 12 view .LVU34
 174 0012 002B     		cmp	r3, #0
 175 0014 46DB     		blt	.L24
 209:Core/Inc/lcd_stm32f0.c ****         }
 176              		.loc 2 209 10 is_stmt 1 view .LVU35
 209:Core/Inc/lcd_stm32f0.c ****         }
 177              		.loc 2 209 15 is_stmt 0 view .LVU36
 178 0016 9022     		movs	r2, #144
 179 0018 D205     		lsls	r2, r2, #23
 180 001a 9169     		ldr	r1, [r2, #24]
 209:Core/Inc/lcd_stm32f0.c ****         }
 181              		.loc 2 209 22 view .LVU37
 182 001c 8023     		movs	r3, #128
 183 001e 1B06     		lsls	r3, r3, #24
 184 0020 0B43     		orrs	r3, r1
 185 0022 9361     		str	r3, [r2, #24]
 186              	.L9:
 212:Core/Inc/lcd_stm32f0.c **** 	{
 187              		.loc 2 212 9 is_stmt 1 view .LVU38
 212:Core/Inc/lcd_stm32f0.c **** 	{
 188              		.loc 2 212 12 is_stmt 0 view .LVU39
 189 0024 6306     		lsls	r3, r4, #25
 190 0026 45D5     		bpl	.L10
 214:Core/Inc/lcd_stm32f0.c ****         }
 191              		.loc 2 214 13 is_stmt 1 view .LVU40
 214:Core/Inc/lcd_stm32f0.c ****         }
 192              		.loc 2 214 18 is_stmt 0 view .LVU41
 193 0028 9022     		movs	r2, #144
 194 002a D205     		lsls	r2, r2, #23
 195 002c 9169     		ldr	r1, [r2, #24]
 214:Core/Inc/lcd_stm32f0.c ****         }
 196              		.loc 2 214 25 view .LVU42
 197 002e 8023     		movs	r3, #128
 198 0030 5B01     		lsls	r3, r3, #5
 199 0032 0B43     		orrs	r3, r1
 200 0034 9361     		str	r3, [r2, #24]
 201              	.L11:
 222:Core/Inc/lcd_stm32f0.c **** 
 202              		.loc 2 222 9 is_stmt 1 view .LVU43
 222:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 11


 203              		.loc 2 222 12 is_stmt 0 view .LVU44
 204 0036 A306     		lsls	r3, r4, #26
 205 0038 44D5     		bpl	.L12
 225:Core/Inc/lcd_stm32f0.c **** 	}
 206              		.loc 2 225 10 is_stmt 1 view .LVU45
 225:Core/Inc/lcd_stm32f0.c **** 	}
 207              		.loc 2 225 15 is_stmt 0 view .LVU46
 208 003a 394A     		ldr	r2, .L25+4
 209 003c 9169     		ldr	r1, [r2, #24]
 225:Core/Inc/lcd_stm32f0.c **** 	}
 210              		.loc 2 225 22 view .LVU47
 211 003e 8023     		movs	r3, #128
 212 0040 9B00     		lsls	r3, r3, #2
 213 0042 0B43     		orrs	r3, r1
 214 0044 9361     		str	r3, [r2, #24]
 215              	.L13:
 232:Core/Inc/lcd_stm32f0.c ****         {
 216              		.loc 2 232 9 is_stmt 1 view .LVU48
 232:Core/Inc/lcd_stm32f0.c ****         {
 217              		.loc 2 232 12 is_stmt 0 view .LVU49
 218 0046 E306     		lsls	r3, r4, #27
 219 0048 43D5     		bpl	.L14
 234:Core/Inc/lcd_stm32f0.c ****         }
 220              		.loc 2 234 10 is_stmt 1 view .LVU50
 234:Core/Inc/lcd_stm32f0.c ****         }
 221              		.loc 2 234 15 is_stmt 0 view .LVU51
 222 004a 354A     		ldr	r2, .L25+4
 223 004c 9169     		ldr	r1, [r2, #24]
 234:Core/Inc/lcd_stm32f0.c ****         }
 224              		.loc 2 234 22 view .LVU52
 225 004e 8023     		movs	r3, #128
 226 0050 5B00     		lsls	r3, r3, #1
 227 0052 0B43     		orrs	r3, r1
 228 0054 9361     		str	r3, [r2, #24]
 229              	.L15:
 241:Core/Inc/lcd_stm32f0.c **** 
 230              		.loc 2 241 9 is_stmt 1 view .LVU53
 231 0056 FFF7FEFF 		bl	pulse_strobe
 232              	.LVL6:
 244:Core/Inc/lcd_stm32f0.c ****         {
 233              		.loc 2 244 9 view .LVU54
 244:Core/Inc/lcd_stm32f0.c ****         {
 234              		.loc 2 244 12 is_stmt 0 view .LVU55
 235 005a 2307     		lsls	r3, r4, #28
 236 005c 40D5     		bpl	.L16
 246:Core/Inc/lcd_stm32f0.c ****         }
 237              		.loc 2 246 10 is_stmt 1 view .LVU56
 246:Core/Inc/lcd_stm32f0.c ****         }
 238              		.loc 2 246 15 is_stmt 0 view .LVU57
 239 005e 9022     		movs	r2, #144
 240 0060 D205     		lsls	r2, r2, #23
 241 0062 9169     		ldr	r1, [r2, #24]
 246:Core/Inc/lcd_stm32f0.c ****         }
 242              		.loc 2 246 22 view .LVU58
 243 0064 8023     		movs	r3, #128
 244 0066 1B02     		lsls	r3, r3, #8
 245 0068 0B43     		orrs	r3, r1
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 12


 246 006a 9361     		str	r3, [r2, #24]
 247              	.L17:
 253:Core/Inc/lcd_stm32f0.c **** 	{
 248              		.loc 2 253 9 is_stmt 1 view .LVU59
 253:Core/Inc/lcd_stm32f0.c **** 	{
 249              		.loc 2 253 12 is_stmt 0 view .LVU60
 250 006c 6307     		lsls	r3, r4, #29
 251 006e 3FD5     		bpl	.L18
 255:Core/Inc/lcd_stm32f0.c ****         }
 252              		.loc 2 255 13 is_stmt 1 view .LVU61
 255:Core/Inc/lcd_stm32f0.c ****         }
 253              		.loc 2 255 18 is_stmt 0 view .LVU62
 254 0070 9022     		movs	r2, #144
 255 0072 D205     		lsls	r2, r2, #23
 256 0074 9169     		ldr	r1, [r2, #24]
 255:Core/Inc/lcd_stm32f0.c ****         }
 257              		.loc 2 255 25 view .LVU63
 258 0076 8023     		movs	r3, #128
 259 0078 5B01     		lsls	r3, r3, #5
 260 007a 0B43     		orrs	r3, r1
 261 007c 9361     		str	r3, [r2, #24]
 262              	.L19:
 263:Core/Inc/lcd_stm32f0.c ****         {
 263              		.loc 2 263 9 is_stmt 1 view .LVU64
 263:Core/Inc/lcd_stm32f0.c ****         {
 264              		.loc 2 263 12 is_stmt 0 view .LVU65
 265 007e A307     		lsls	r3, r4, #30
 266 0080 3ED5     		bpl	.L20
 265:Core/Inc/lcd_stm32f0.c **** 	}
 267              		.loc 2 265 10 is_stmt 1 view .LVU66
 265:Core/Inc/lcd_stm32f0.c **** 	}
 268              		.loc 2 265 15 is_stmt 0 view .LVU67
 269 0082 274A     		ldr	r2, .L25+4
 270 0084 9169     		ldr	r1, [r2, #24]
 265:Core/Inc/lcd_stm32f0.c **** 	}
 271              		.loc 2 265 22 view .LVU68
 272 0086 8023     		movs	r3, #128
 273 0088 9B00     		lsls	r3, r3, #2
 274 008a 0B43     		orrs	r3, r1
 275 008c 9361     		str	r3, [r2, #24]
 276              	.L21:
 272:Core/Inc/lcd_stm32f0.c ****         {
 277              		.loc 2 272 9 is_stmt 1 view .LVU69
 272:Core/Inc/lcd_stm32f0.c ****         {
 278              		.loc 2 272 12 is_stmt 0 view .LVU70
 279 008e E407     		lsls	r4, r4, #31
 280 0090 3DD5     		bpl	.L22
 281              	.LVL7:
 274:Core/Inc/lcd_stm32f0.c ****         }
 282              		.loc 2 274 10 is_stmt 1 view .LVU71
 274:Core/Inc/lcd_stm32f0.c ****         }
 283              		.loc 2 274 15 is_stmt 0 view .LVU72
 284 0092 234A     		ldr	r2, .L25+4
 285 0094 9169     		ldr	r1, [r2, #24]
 274:Core/Inc/lcd_stm32f0.c ****         }
 286              		.loc 2 274 22 view .LVU73
 287 0096 8023     		movs	r3, #128
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 13


 288 0098 5B00     		lsls	r3, r3, #1
 289 009a 0B43     		orrs	r3, r1
 290 009c 9361     		str	r3, [r2, #24]
 291              	.L23:
 281:Core/Inc/lcd_stm32f0.c **** }
 292              		.loc 2 281 9 is_stmt 1 view .LVU74
 293 009e FFF7FEFF 		bl	pulse_strobe
 294              	.LVL8:
 282:Core/Inc/lcd_stm32f0.c **** 
 295              		.loc 2 282 1 is_stmt 0 view .LVU75
 296              		@ sp needed
 297 00a2 10BD     		pop	{r4, pc}
 298              	.LVL9:
 299              	.L24:
 205:Core/Inc/lcd_stm32f0.c ****         }
 300              		.loc 2 205 10 is_stmt 1 view .LVU76
 205:Core/Inc/lcd_stm32f0.c ****         }
 301              		.loc 2 205 15 is_stmt 0 view .LVU77
 302 00a4 9022     		movs	r2, #144
 303 00a6 D205     		lsls	r2, r2, #23
 304 00a8 9169     		ldr	r1, [r2, #24]
 205:Core/Inc/lcd_stm32f0.c ****         }
 305              		.loc 2 205 22 view .LVU78
 306 00aa 8023     		movs	r3, #128
 307 00ac 1B02     		lsls	r3, r3, #8
 308 00ae 0B43     		orrs	r3, r1
 309 00b0 9361     		str	r3, [r2, #24]
 310 00b2 B7E7     		b	.L9
 311              	.L10:
 219:Core/Inc/lcd_stm32f0.c ****         }
 312              		.loc 2 219 13 is_stmt 1 view .LVU79
 219:Core/Inc/lcd_stm32f0.c ****         }
 313              		.loc 2 219 18 is_stmt 0 view .LVU80
 314 00b4 9022     		movs	r2, #144
 315 00b6 D205     		lsls	r2, r2, #23
 316 00b8 9169     		ldr	r1, [r2, #24]
 219:Core/Inc/lcd_stm32f0.c ****         }
 317              		.loc 2 219 25 view .LVU81
 318 00ba 8023     		movs	r3, #128
 319 00bc 5B05     		lsls	r3, r3, #21
 320 00be 0B43     		orrs	r3, r1
 321 00c0 9361     		str	r3, [r2, #24]
 322 00c2 B8E7     		b	.L11
 323              	.L12:
 229:Core/Inc/lcd_stm32f0.c ****         }
 324              		.loc 2 229 10 is_stmt 1 view .LVU82
 229:Core/Inc/lcd_stm32f0.c ****         }
 325              		.loc 2 229 15 is_stmt 0 view .LVU83
 326 00c4 164A     		ldr	r2, .L25+4
 327 00c6 9169     		ldr	r1, [r2, #24]
 229:Core/Inc/lcd_stm32f0.c ****         }
 328              		.loc 2 229 22 view .LVU84
 329 00c8 8023     		movs	r3, #128
 330 00ca 9B04     		lsls	r3, r3, #18
 331 00cc 0B43     		orrs	r3, r1
 332 00ce 9361     		str	r3, [r2, #24]
 333 00d0 B9E7     		b	.L13
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 14


 334              	.L14:
 238:Core/Inc/lcd_stm32f0.c ****         }
 335              		.loc 2 238 10 is_stmt 1 view .LVU85
 238:Core/Inc/lcd_stm32f0.c ****         }
 336              		.loc 2 238 15 is_stmt 0 view .LVU86
 337 00d2 134A     		ldr	r2, .L25+4
 338 00d4 9169     		ldr	r1, [r2, #24]
 238:Core/Inc/lcd_stm32f0.c ****         }
 339              		.loc 2 238 22 view .LVU87
 340 00d6 8023     		movs	r3, #128
 341 00d8 5B04     		lsls	r3, r3, #17
 342 00da 0B43     		orrs	r3, r1
 343 00dc 9361     		str	r3, [r2, #24]
 344 00de BAE7     		b	.L15
 345              	.LVL10:
 346              	.L16:
 250:Core/Inc/lcd_stm32f0.c ****         }
 347              		.loc 2 250 10 is_stmt 1 view .LVU88
 250:Core/Inc/lcd_stm32f0.c ****         }
 348              		.loc 2 250 15 is_stmt 0 view .LVU89
 349 00e0 9022     		movs	r2, #144
 350 00e2 D205     		lsls	r2, r2, #23
 351 00e4 9169     		ldr	r1, [r2, #24]
 250:Core/Inc/lcd_stm32f0.c ****         }
 352              		.loc 2 250 22 view .LVU90
 353 00e6 8023     		movs	r3, #128
 354 00e8 1B06     		lsls	r3, r3, #24
 355 00ea 0B43     		orrs	r3, r1
 356 00ec 9361     		str	r3, [r2, #24]
 357 00ee BDE7     		b	.L17
 358              	.L18:
 260:Core/Inc/lcd_stm32f0.c ****         }
 359              		.loc 2 260 13 is_stmt 1 view .LVU91
 260:Core/Inc/lcd_stm32f0.c ****         }
 360              		.loc 2 260 18 is_stmt 0 view .LVU92
 361 00f0 9022     		movs	r2, #144
 362 00f2 D205     		lsls	r2, r2, #23
 363 00f4 9169     		ldr	r1, [r2, #24]
 260:Core/Inc/lcd_stm32f0.c ****         }
 364              		.loc 2 260 25 view .LVU93
 365 00f6 8023     		movs	r3, #128
 366 00f8 5B05     		lsls	r3, r3, #21
 367 00fa 0B43     		orrs	r3, r1
 368 00fc 9361     		str	r3, [r2, #24]
 369 00fe BEE7     		b	.L19
 370              	.L20:
 269:Core/Inc/lcd_stm32f0.c ****         }
 371              		.loc 2 269 10 is_stmt 1 view .LVU94
 269:Core/Inc/lcd_stm32f0.c ****         }
 372              		.loc 2 269 15 is_stmt 0 view .LVU95
 373 0100 074A     		ldr	r2, .L25+4
 374 0102 9169     		ldr	r1, [r2, #24]
 269:Core/Inc/lcd_stm32f0.c ****         }
 375              		.loc 2 269 22 view .LVU96
 376 0104 8023     		movs	r3, #128
 377 0106 9B04     		lsls	r3, r3, #18
 378 0108 0B43     		orrs	r3, r1
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 15


 379 010a 9361     		str	r3, [r2, #24]
 380 010c BFE7     		b	.L21
 381              	.LVL11:
 382              	.L22:
 278:Core/Inc/lcd_stm32f0.c ****         }
 383              		.loc 2 278 10 is_stmt 1 view .LVU97
 278:Core/Inc/lcd_stm32f0.c ****         }
 384              		.loc 2 278 15 is_stmt 0 view .LVU98
 385 010e 044A     		ldr	r2, .L25+4
 386 0110 9169     		ldr	r1, [r2, #24]
 278:Core/Inc/lcd_stm32f0.c ****         }
 387              		.loc 2 278 22 view .LVU99
 388 0112 8023     		movs	r3, #128
 389 0114 5B04     		lsls	r3, r3, #17
 390 0116 0B43     		orrs	r3, r1
 391 0118 9361     		str	r3, [r2, #24]
 392 011a C0E7     		b	.L23
 393              	.L26:
 394              		.align	2
 395              	.L25:
 396 011c 00080048 		.word	1207961600
 397 0120 00040048 		.word	1207960576
 398              		.cfi_endproc
 399              	.LFE42:
 401              		.section	.text.lcd_putstring,"ax",%progbits
 402              		.align	1
 403              		.global	lcd_putstring
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	lcd_putstring:
 409              	.LVL12:
 410              	.LFB43:
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 411              		.loc 2 291 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 415              		.loc 2 291 1 is_stmt 0 view .LVU101
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              		.cfi_def_cfa_offset 16
 418              		.cfi_offset 4, -16
 419              		.cfi_offset 5, -12
 420              		.cfi_offset 6, -8
 421              		.cfi_offset 14, -4
 422 0002 0500     		movs	r5, r0
 292:Core/Inc/lcd_stm32f0.c **** 
 423              		.loc 2 292 5 is_stmt 1 view .LVU102
 424              	.LVL13:
 294:Core/Inc/lcd_stm32f0.c ****     {
 425              		.loc 2 294 5 view .LVU103
 292:Core/Inc/lcd_stm32f0.c **** 
 426              		.loc 2 292 19 is_stmt 0 view .LVU104
 427 0004 0024     		movs	r4, #0
 294:Core/Inc/lcd_stm32f0.c ****     {
 428              		.loc 2 294 11 view .LVU105
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 16


 429 0006 03E0     		b	.L28
 430              	.LVL14:
 431              	.L29:
 296:Core/Inc/lcd_stm32f0.c **** 	    count++;
 432              		.loc 2 296 6 is_stmt 1 view .LVU106
 433 0008 FFF7FEFF 		bl	lcd_putchar
 434              	.LVL15:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 435              		.loc 2 297 6 view .LVU107
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 436              		.loc 2 297 11 is_stmt 0 view .LVU108
 437 000c 0134     		adds	r4, r4, #1
 438              	.LVL16:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 439              		.loc 2 297 11 view .LVU109
 440 000e E4B2     		uxtb	r4, r4
 441              	.LVL17:
 442              	.L28:
 294:Core/Inc/lcd_stm32f0.c ****     {
 443              		.loc 2 294 12 is_stmt 1 view .LVU110
 294:Core/Inc/lcd_stm32f0.c ****     {
 444              		.loc 2 294 20 is_stmt 0 view .LVU111
 445 0010 285D     		ldrb	r0, [r5, r4]
 294:Core/Inc/lcd_stm32f0.c ****     {
 446              		.loc 2 294 12 view .LVU112
 447 0012 0028     		cmp	r0, #0
 448 0014 F8D1     		bne	.L29
 299:Core/Inc/lcd_stm32f0.c **** 
 449              		.loc 2 299 1 view .LVU113
 450              		@ sp needed
 451              	.LVL18:
 452              	.LVL19:
 299:Core/Inc/lcd_stm32f0.c **** 
 453              		.loc 2 299 1 view .LVU114
 454 0016 70BD     		pop	{r4, r5, r6, pc}
 455              		.cfi_endproc
 456              	.LFE43:
 458              		.section	.text.lcd_command,"ax",%progbits
 459              		.align	1
 460              		.global	lcd_command
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 465              	lcd_command:
 466              	.LVL20:
 467              	.LFB40:
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 468              		.loc 2 72 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 472              		.loc 2 72 1 is_stmt 0 view .LVU116
 473 0000 10B5     		push	{r4, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 17


 477 0002 0400     		movs	r4, r0
  73:Core/Inc/lcd_stm32f0.c **** 
 478              		.loc 2 73 5 is_stmt 1 view .LVU117
  73:Core/Inc/lcd_stm32f0.c **** 
 479              		.loc 2 73 10 is_stmt 0 view .LVU118
 480 0004 474A     		ldr	r2, .L48
 481 0006 9169     		ldr	r1, [r2, #24]
  73:Core/Inc/lcd_stm32f0.c **** 
 482              		.loc 2 73 17 view .LVU119
 483 0008 8023     		movs	r3, #128
 484 000a DB05     		lsls	r3, r3, #23
 485 000c 0B43     		orrs	r3, r1
 486 000e 9361     		str	r3, [r2, #24]
  77:Core/Inc/lcd_stm32f0.c ****     {
 487              		.loc 2 77 5 is_stmt 1 view .LVU120
  77:Core/Inc/lcd_stm32f0.c ****     {
 488              		.loc 2 77 26 is_stmt 0 view .LVU121
 489 0010 43B2     		sxtb	r3, r0
  77:Core/Inc/lcd_stm32f0.c ****     {
 490              		.loc 2 77 8 view .LVU122
 491 0012 002B     		cmp	r3, #0
 492 0014 49DB     		blt	.L47
  83:Core/Inc/lcd_stm32f0.c ****     }
 493              		.loc 2 83 6 is_stmt 1 view .LVU123
  83:Core/Inc/lcd_stm32f0.c ****     }
 494              		.loc 2 83 11 is_stmt 0 view .LVU124
 495 0016 9022     		movs	r2, #144
 496 0018 D205     		lsls	r2, r2, #23
 497 001a 9169     		ldr	r1, [r2, #24]
  83:Core/Inc/lcd_stm32f0.c ****     }
 498              		.loc 2 83 18 view .LVU125
 499 001c 8023     		movs	r3, #128
 500 001e 1B06     		lsls	r3, r3, #24
 501 0020 0B43     		orrs	r3, r1
 502 0022 9361     		str	r3, [r2, #24]
 503              	.L32:
  86:Core/Inc/lcd_stm32f0.c ****     {
 504              		.loc 2 86 5 is_stmt 1 view .LVU126
  86:Core/Inc/lcd_stm32f0.c ****     {
 505              		.loc 2 86 8 is_stmt 0 view .LVU127
 506 0024 6306     		lsls	r3, r4, #25
 507 0026 48D5     		bpl	.L33
  88:Core/Inc/lcd_stm32f0.c ****     }
 508              		.loc 2 88 9 is_stmt 1 view .LVU128
  88:Core/Inc/lcd_stm32f0.c ****     }
 509              		.loc 2 88 14 is_stmt 0 view .LVU129
 510 0028 9022     		movs	r2, #144
 511 002a D205     		lsls	r2, r2, #23
 512 002c 9169     		ldr	r1, [r2, #24]
  88:Core/Inc/lcd_stm32f0.c ****     }
 513              		.loc 2 88 21 view .LVU130
 514 002e 8023     		movs	r3, #128
 515 0030 5B01     		lsls	r3, r3, #5
 516 0032 0B43     		orrs	r3, r1
 517 0034 9361     		str	r3, [r2, #24]
 518              	.L34:
  95:Core/Inc/lcd_stm32f0.c ****     {
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 18


 519              		.loc 2 95 5 is_stmt 1 view .LVU131
  95:Core/Inc/lcd_stm32f0.c ****     {
 520              		.loc 2 95 8 is_stmt 0 view .LVU132
 521 0036 A306     		lsls	r3, r4, #26
 522 0038 47D5     		bpl	.L35
  97:Core/Inc/lcd_stm32f0.c ****     }
 523              		.loc 2 97 6 is_stmt 1 view .LVU133
  97:Core/Inc/lcd_stm32f0.c ****     }
 524              		.loc 2 97 11 is_stmt 0 view .LVU134
 525 003a 3B4A     		ldr	r2, .L48+4
 526 003c 9169     		ldr	r1, [r2, #24]
  97:Core/Inc/lcd_stm32f0.c ****     }
 527              		.loc 2 97 18 view .LVU135
 528 003e 8023     		movs	r3, #128
 529 0040 9B00     		lsls	r3, r3, #2
 530 0042 0B43     		orrs	r3, r1
 531 0044 9361     		str	r3, [r2, #24]
 532              	.L36:
 104:Core/Inc/lcd_stm32f0.c ****     {
 533              		.loc 2 104 5 is_stmt 1 view .LVU136
 104:Core/Inc/lcd_stm32f0.c ****     {
 534              		.loc 2 104 8 is_stmt 0 view .LVU137
 535 0046 E306     		lsls	r3, r4, #27
 536 0048 46D5     		bpl	.L37
 106:Core/Inc/lcd_stm32f0.c ****     }
 537              		.loc 2 106 6 is_stmt 1 view .LVU138
 106:Core/Inc/lcd_stm32f0.c ****     }
 538              		.loc 2 106 11 is_stmt 0 view .LVU139
 539 004a 374A     		ldr	r2, .L48+4
 540 004c 9169     		ldr	r1, [r2, #24]
 106:Core/Inc/lcd_stm32f0.c ****     }
 541              		.loc 2 106 18 view .LVU140
 542 004e 8023     		movs	r3, #128
 543 0050 5B00     		lsls	r3, r3, #1
 544 0052 0B43     		orrs	r3, r1
 545 0054 9361     		str	r3, [r2, #24]
 546              	.L38:
 113:Core/Inc/lcd_stm32f0.c **** 
 547              		.loc 2 113 5 is_stmt 1 view .LVU141
 548 0056 FFF7FEFF 		bl	pulse_strobe
 549              	.LVL21:
 116:Core/Inc/lcd_stm32f0.c ****     {
 550              		.loc 2 116 5 view .LVU142
 116:Core/Inc/lcd_stm32f0.c ****     {
 551              		.loc 2 116 8 is_stmt 0 view .LVU143
 552 005a 2307     		lsls	r3, r4, #28
 553 005c 43D5     		bpl	.L39
 118:Core/Inc/lcd_stm32f0.c ****     }
 554              		.loc 2 118 6 is_stmt 1 view .LVU144
 118:Core/Inc/lcd_stm32f0.c ****     }
 555              		.loc 2 118 11 is_stmt 0 view .LVU145
 556 005e 9022     		movs	r2, #144
 557 0060 D205     		lsls	r2, r2, #23
 558 0062 9169     		ldr	r1, [r2, #24]
 118:Core/Inc/lcd_stm32f0.c ****     }
 559              		.loc 2 118 18 view .LVU146
 560 0064 8023     		movs	r3, #128
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 19


 561 0066 1B02     		lsls	r3, r3, #8
 562 0068 0B43     		orrs	r3, r1
 563 006a 9361     		str	r3, [r2, #24]
 564              	.L40:
 125:Core/Inc/lcd_stm32f0.c ****     {
 565              		.loc 2 125 5 is_stmt 1 view .LVU147
 125:Core/Inc/lcd_stm32f0.c ****     {
 566              		.loc 2 125 8 is_stmt 0 view .LVU148
 567 006c 6307     		lsls	r3, r4, #29
 568 006e 42D5     		bpl	.L41
 127:Core/Inc/lcd_stm32f0.c ****     }
 569              		.loc 2 127 9 is_stmt 1 view .LVU149
 127:Core/Inc/lcd_stm32f0.c ****     }
 570              		.loc 2 127 14 is_stmt 0 view .LVU150
 571 0070 9022     		movs	r2, #144
 572 0072 D205     		lsls	r2, r2, #23
 573 0074 9169     		ldr	r1, [r2, #24]
 127:Core/Inc/lcd_stm32f0.c ****     }
 574              		.loc 2 127 21 view .LVU151
 575 0076 8023     		movs	r3, #128
 576 0078 5B01     		lsls	r3, r3, #5
 577 007a 0B43     		orrs	r3, r1
 578 007c 9361     		str	r3, [r2, #24]
 579              	.L42:
 134:Core/Inc/lcd_stm32f0.c ****     {
 580              		.loc 2 134 5 is_stmt 1 view .LVU152
 134:Core/Inc/lcd_stm32f0.c ****     {
 581              		.loc 2 134 8 is_stmt 0 view .LVU153
 582 007e A307     		lsls	r3, r4, #30
 583 0080 41D5     		bpl	.L43
 136:Core/Inc/lcd_stm32f0.c ****     }
 584              		.loc 2 136 6 is_stmt 1 view .LVU154
 136:Core/Inc/lcd_stm32f0.c ****     }
 585              		.loc 2 136 11 is_stmt 0 view .LVU155
 586 0082 294A     		ldr	r2, .L48+4
 587 0084 9169     		ldr	r1, [r2, #24]
 136:Core/Inc/lcd_stm32f0.c ****     }
 588              		.loc 2 136 18 view .LVU156
 589 0086 8023     		movs	r3, #128
 590 0088 9B00     		lsls	r3, r3, #2
 591 008a 0B43     		orrs	r3, r1
 592 008c 9361     		str	r3, [r2, #24]
 593              	.L44:
 143:Core/Inc/lcd_stm32f0.c ****     {
 594              		.loc 2 143 5 is_stmt 1 view .LVU157
 143:Core/Inc/lcd_stm32f0.c ****     {
 595              		.loc 2 143 8 is_stmt 0 view .LVU158
 596 008e E407     		lsls	r4, r4, #31
 597 0090 40D5     		bpl	.L45
 598              	.LVL22:
 145:Core/Inc/lcd_stm32f0.c ****     }
 599              		.loc 2 145 6 is_stmt 1 view .LVU159
 145:Core/Inc/lcd_stm32f0.c ****     }
 600              		.loc 2 145 11 is_stmt 0 view .LVU160
 601 0092 254A     		ldr	r2, .L48+4
 602 0094 9169     		ldr	r1, [r2, #24]
 145:Core/Inc/lcd_stm32f0.c ****     }
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 20


 603              		.loc 2 145 18 view .LVU161
 604 0096 8023     		movs	r3, #128
 605 0098 5B00     		lsls	r3, r3, #1
 606 009a 0B43     		orrs	r3, r1
 607 009c 9361     		str	r3, [r2, #24]
 608              	.L46:
 152:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 609              		.loc 2 152 5 is_stmt 1 view .LVU162
 610 009e FFF7FEFF 		bl	pulse_strobe
 611              	.LVL23:
 153:Core/Inc/lcd_stm32f0.c **** }
 612              		.loc 2 153 5 view .LVU163
 613 00a2 2248     		ldr	r0, .L48+8
 614 00a4 FFF7FEFF 		bl	delay
 615              	.LVL24:
 154:Core/Inc/lcd_stm32f0.c **** 
 616              		.loc 2 154 1 is_stmt 0 view .LVU164
 617              		@ sp needed
 618 00a8 10BD     		pop	{r4, pc}
 619              	.LVL25:
 620              	.L47:
  79:Core/Inc/lcd_stm32f0.c ****     }
 621              		.loc 2 79 6 is_stmt 1 view .LVU165
  79:Core/Inc/lcd_stm32f0.c ****     }
 622              		.loc 2 79 11 is_stmt 0 view .LVU166
 623 00aa 9022     		movs	r2, #144
 624 00ac D205     		lsls	r2, r2, #23
 625 00ae 9169     		ldr	r1, [r2, #24]
  79:Core/Inc/lcd_stm32f0.c ****     }
 626              		.loc 2 79 18 view .LVU167
 627 00b0 8023     		movs	r3, #128
 628 00b2 1B02     		lsls	r3, r3, #8
 629 00b4 0B43     		orrs	r3, r1
 630 00b6 9361     		str	r3, [r2, #24]
 631 00b8 B4E7     		b	.L32
 632              	.L33:
  92:Core/Inc/lcd_stm32f0.c ****     }
 633              		.loc 2 92 9 is_stmt 1 view .LVU168
  92:Core/Inc/lcd_stm32f0.c ****     }
 634              		.loc 2 92 14 is_stmt 0 view .LVU169
 635 00ba 9022     		movs	r2, #144
 636 00bc D205     		lsls	r2, r2, #23
 637 00be 9169     		ldr	r1, [r2, #24]
  92:Core/Inc/lcd_stm32f0.c ****     }
 638              		.loc 2 92 21 view .LVU170
 639 00c0 8023     		movs	r3, #128
 640 00c2 5B05     		lsls	r3, r3, #21
 641 00c4 0B43     		orrs	r3, r1
 642 00c6 9361     		str	r3, [r2, #24]
 643 00c8 B5E7     		b	.L34
 644              	.L35:
 101:Core/Inc/lcd_stm32f0.c ****     }
 645              		.loc 2 101 6 is_stmt 1 view .LVU171
 101:Core/Inc/lcd_stm32f0.c ****     }
 646              		.loc 2 101 11 is_stmt 0 view .LVU172
 647 00ca 174A     		ldr	r2, .L48+4
 648 00cc 9169     		ldr	r1, [r2, #24]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 21


 101:Core/Inc/lcd_stm32f0.c ****     }
 649              		.loc 2 101 18 view .LVU173
 650 00ce 8023     		movs	r3, #128
 651 00d0 9B04     		lsls	r3, r3, #18
 652 00d2 0B43     		orrs	r3, r1
 653 00d4 9361     		str	r3, [r2, #24]
 654 00d6 B6E7     		b	.L36
 655              	.L37:
 110:Core/Inc/lcd_stm32f0.c ****     }
 656              		.loc 2 110 6 is_stmt 1 view .LVU174
 110:Core/Inc/lcd_stm32f0.c ****     }
 657              		.loc 2 110 11 is_stmt 0 view .LVU175
 658 00d8 134A     		ldr	r2, .L48+4
 659 00da 9169     		ldr	r1, [r2, #24]
 110:Core/Inc/lcd_stm32f0.c ****     }
 660              		.loc 2 110 18 view .LVU176
 661 00dc 8023     		movs	r3, #128
 662 00de 5B04     		lsls	r3, r3, #17
 663 00e0 0B43     		orrs	r3, r1
 664 00e2 9361     		str	r3, [r2, #24]
 665 00e4 B7E7     		b	.L38
 666              	.LVL26:
 667              	.L39:
 122:Core/Inc/lcd_stm32f0.c ****     }
 668              		.loc 2 122 6 is_stmt 1 view .LVU177
 122:Core/Inc/lcd_stm32f0.c ****     }
 669              		.loc 2 122 11 is_stmt 0 view .LVU178
 670 00e6 9022     		movs	r2, #144
 671 00e8 D205     		lsls	r2, r2, #23
 672 00ea 9169     		ldr	r1, [r2, #24]
 122:Core/Inc/lcd_stm32f0.c ****     }
 673              		.loc 2 122 18 view .LVU179
 674 00ec 8023     		movs	r3, #128
 675 00ee 1B06     		lsls	r3, r3, #24
 676 00f0 0B43     		orrs	r3, r1
 677 00f2 9361     		str	r3, [r2, #24]
 678 00f4 BAE7     		b	.L40
 679              	.L41:
 131:Core/Inc/lcd_stm32f0.c ****     }
 680              		.loc 2 131 9 is_stmt 1 view .LVU180
 131:Core/Inc/lcd_stm32f0.c ****     }
 681              		.loc 2 131 14 is_stmt 0 view .LVU181
 682 00f6 9022     		movs	r2, #144
 683 00f8 D205     		lsls	r2, r2, #23
 684 00fa 9169     		ldr	r1, [r2, #24]
 131:Core/Inc/lcd_stm32f0.c ****     }
 685              		.loc 2 131 21 view .LVU182
 686 00fc 8023     		movs	r3, #128
 687 00fe 5B05     		lsls	r3, r3, #21
 688 0100 0B43     		orrs	r3, r1
 689 0102 9361     		str	r3, [r2, #24]
 690 0104 BBE7     		b	.L42
 691              	.L43:
 140:Core/Inc/lcd_stm32f0.c ****     }
 692              		.loc 2 140 6 is_stmt 1 view .LVU183
 140:Core/Inc/lcd_stm32f0.c ****     }
 693              		.loc 2 140 11 is_stmt 0 view .LVU184
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 22


 694 0106 084A     		ldr	r2, .L48+4
 695 0108 9169     		ldr	r1, [r2, #24]
 140:Core/Inc/lcd_stm32f0.c ****     }
 696              		.loc 2 140 18 view .LVU185
 697 010a 8023     		movs	r3, #128
 698 010c 9B04     		lsls	r3, r3, #18
 699 010e 0B43     		orrs	r3, r1
 700 0110 9361     		str	r3, [r2, #24]
 701 0112 BCE7     		b	.L44
 702              	.LVL27:
 703              	.L45:
 149:Core/Inc/lcd_stm32f0.c ****     }
 704              		.loc 2 149 6 is_stmt 1 view .LVU186
 149:Core/Inc/lcd_stm32f0.c ****     }
 705              		.loc 2 149 11 is_stmt 0 view .LVU187
 706 0114 044A     		ldr	r2, .L48+4
 707 0116 9169     		ldr	r1, [r2, #24]
 149:Core/Inc/lcd_stm32f0.c ****     }
 708              		.loc 2 149 18 view .LVU188
 709 0118 8023     		movs	r3, #128
 710 011a 5B04     		lsls	r3, r3, #17
 711 011c 0B43     		orrs	r3, r1
 712 011e 9361     		str	r3, [r2, #24]
 713 0120 BDE7     		b	.L46
 714              	.L49:
 715 0122 C046     		.align	2
 716              	.L48:
 717 0124 00080048 		.word	1207961600
 718 0128 00040048 		.word	1207960576
 719 012c B80B0000 		.word	3000
 720              		.cfi_endproc
 721              	.LFE40:
 723              		.section	.text.init_LCD,"ax",%progbits
 724              		.align	1
 725              		.global	init_LCD
 726              		.syntax unified
 727              		.code	16
 728              		.thumb_func
 730              	init_LCD:
 731              	.LFB41:
 168:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 732              		.loc 2 168 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 10B5     		push	{r4, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 4, -8
 739              		.cfi_offset 14, -4
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 740              		.loc 2 169 5 view .LVU190
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 741              		.loc 2 169 8 is_stmt 0 view .LVU191
 742 0002 1B4B     		ldr	r3, .L51
 743 0004 5969     		ldr	r1, [r3, #20]
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 744              		.loc 2 169 17 view .LVU192
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 23


 745 0006 8022     		movs	r2, #128
 746 0008 9202     		lsls	r2, r2, #10
 747 000a 0A43     		orrs	r2, r1
 748 000c 5A61     		str	r2, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 749              		.loc 2 170 5 is_stmt 1 view .LVU193
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 750              		.loc 2 170 8 is_stmt 0 view .LVU194
 751 000e 5969     		ldr	r1, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 752              		.loc 2 170 17 view .LVU195
 753 0010 8022     		movs	r2, #128
 754 0012 D202     		lsls	r2, r2, #11
 755 0014 0A43     		orrs	r2, r1
 756 0016 5A61     		str	r2, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 757              		.loc 2 171 5 is_stmt 1 view .LVU196
 171:Core/Inc/lcd_stm32f0.c **** 
 758              		.loc 2 171 8 is_stmt 0 view .LVU197
 759 0018 5969     		ldr	r1, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 760              		.loc 2 171 17 view .LVU198
 761 001a 8022     		movs	r2, #128
 762 001c 1203     		lsls	r2, r2, #12
 763 001e 0A43     		orrs	r2, r1
 764 0020 5A61     		str	r2, [r3, #20]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 765              		.loc 2 173 5 is_stmt 1 view .LVU199
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 766              		.loc 2 173 10 is_stmt 0 view .LVU200
 767 0022 9022     		movs	r2, #144
 768 0024 D205     		lsls	r2, r2, #23
 769 0026 1168     		ldr	r1, [r2]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 770              		.loc 2 173 18 view .LVU201
 771 0028 8223     		movs	r3, #130
 772 002a DB05     		lsls	r3, r3, #23
 773 002c 0B43     		orrs	r3, r1
 774 002e 1360     		str	r3, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 775              		.loc 2 174 5 is_stmt 1 view .LVU202
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 776              		.loc 2 174 10 is_stmt 0 view .LVU203
 777 0030 104A     		ldr	r2, .L51+4
 778 0032 1168     		ldr	r1, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 779              		.loc 2 174 18 view .LVU204
 780 0034 A023     		movs	r3, #160
 781 0036 DB02     		lsls	r3, r3, #11
 782 0038 0B43     		orrs	r3, r1
 783 003a 1360     		str	r3, [r2]
 175:Core/Inc/lcd_stm32f0.c **** 
 784              		.loc 2 175 5 is_stmt 1 view .LVU205
 175:Core/Inc/lcd_stm32f0.c **** 
 785              		.loc 2 175 10 is_stmt 0 view .LVU206
 786 003c 0E4A     		ldr	r2, .L51+8
 787 003e 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 24


 175:Core/Inc/lcd_stm32f0.c **** 
 788              		.loc 2 175 18 view .LVU207
 789 0040 A023     		movs	r3, #160
 790 0042 DB05     		lsls	r3, r3, #23
 791 0044 0B43     		orrs	r3, r1
 792 0046 1360     		str	r3, [r2]
 177:Core/Inc/lcd_stm32f0.c **** 
 793              		.loc 2 177 5 is_stmt 1 view .LVU208
 794 0048 0C48     		ldr	r0, .L51+12
 795 004a FFF7FEFF 		bl	delay
 796              	.LVL28:
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 797              		.loc 2 179 5 view .LVU209
 798 004e 3320     		movs	r0, #51
 799 0050 FFF7FEFF 		bl	lcd_command
 800              	.LVL29:
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 801              		.loc 2 180 5 view .LVU210
 802 0054 3220     		movs	r0, #50
 803 0056 FFF7FEFF 		bl	lcd_command
 804              	.LVL30:
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 805              		.loc 2 181 5 view .LVU211
 806 005a 0C20     		movs	r0, #12
 807 005c FFF7FEFF 		bl	lcd_command
 808              	.LVL31:
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 809              		.loc 2 182 5 view .LVU212
 810 0060 2820     		movs	r0, #40
 811 0062 FFF7FEFF 		bl	lcd_command
 812              	.LVL32:
 183:Core/Inc/lcd_stm32f0.c **** }
 813              		.loc 2 183 5 view .LVU213
 814 0066 0120     		movs	r0, #1
 815 0068 FFF7FEFF 		bl	lcd_command
 816              	.LVL33:
 184:Core/Inc/lcd_stm32f0.c **** 
 817              		.loc 2 184 1 is_stmt 0 view .LVU214
 818              		@ sp needed
 819 006c 10BD     		pop	{r4, pc}
 820              	.L52:
 821 006e C046     		.align	2
 822              	.L51:
 823 0070 00100240 		.word	1073876992
 824 0074 00040048 		.word	1207960576
 825 0078 00080048 		.word	1207961600
 826 007c 30750000 		.word	30000
 827              		.cfi_endproc
 828              	.LFE41:
 830              		.section	.text.init_interrupts,"ax",%progbits
 831              		.align	1
 832              		.global	init_interrupts
 833              		.syntax unified
 834              		.code	16
 835              		.thumb_func
 837              	init_interrupts:
 838              	.LFB50:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 25


   1:Core/Src/main.c **** //********************************************************************
   2:Core/Src/main.c **** //*                    EEE2046F C template                           *
   3:Core/Src/main.c **** //*==================================================================*
   4:Core/Src/main.c **** //* WRITTEN BY: Jesse Arendse   	                 		               *
   5:Core/Src/main.c **** //* DATE CREATED: 07/04/2023                                         *
   6:Core/Src/main.c **** //* MODIFIED:                                                        *
   7:Core/Src/main.c **** //*==================================================================*
   8:Core/Src/main.c **** //* PROGRAMMED IN: Visual Studio Code                                *
   9:Core/Src/main.c **** //* TARGET:        STM32F0                                           *
  10:Core/Src/main.c **** //*==================================================================*
  11:Core/Src/main.c **** //* DESCRIPTION:                                                     *
  12:Core/Src/main.c **** //*                                                                  *
  13:Core/Src/main.c **** //********************************************************************
  14:Core/Src/main.c **** // INCLUDE FILES
  15:Core/Src/main.c **** //====================================================================
  16:Core/Src/main.c **** #include "stm32f0xx.h"
  17:Core/Src/main.c **** #include <lcd_stm32f0.c>
  18:Core/Src/main.c **** #include <stdio.h> 
  19:Core/Src/main.c **** #include <stdlib.h>
  20:Core/Src/main.c **** #include <stdint.h>
  21:Core/Src/main.c **** #include <time.h>
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** //====================================================================
  25:Core/Src/main.c **** // GLOBAL CONSTANTS
  26:Core/Src/main.c **** //====================================================================
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** char line_one[] = "score: 000      "; 
  29:Core/Src/main.c **** char line_two[] = "               o";
  30:Core/Src/main.c **** int notGameOver = 1;
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** //====================================================================
  33:Core/Src/main.c **** // GLOBAL VARIABLES
  34:Core/Src/main.c **** //====================================================================
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** //====================================================================
  37:Core/Src/main.c **** // FUNCTION DECLARATIONS
  38:Core/Src/main.c **** //====================================================================
  39:Core/Src/main.c **** void setScore(int score);
  40:Core/Src/main.c **** void up();
  41:Core/Src/main.c **** void down();
  42:Core/Src/main.c **** void update_game();
  43:Core/Src/main.c **** int up_bad();
  44:Core/Src/main.c **** int down_bad();
  45:Core/Src/main.c **** void new_state(uint16_t score);
  46:Core/Src/main.c **** void init_game();
  47:Core/Src/main.c **** void gameOver();
  48:Core/Src/main.c **** void init_interrupts();
  49:Core/Src/main.c **** void EXTI0_1_IRQHandler(void);
  50:Core/Src/main.c **** void EXTI2_3_IRQHandler(void) ;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** //====================================================================
  53:Core/Src/main.c **** // MAIN FUNCTION
  54:Core/Src/main.c **** //====================================================================
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** #define SetClock RCC -> AHBENR |= RCC_AHBENR_GPIOAEN;
  57:Core/Src/main.c **** #define SW2_Not_Pressed  ( ( GPIOA -> IDR & GPIO_IDR_2) != 0)
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 26


  58:Core/Src/main.c **** #define SW1_Pressed  ( ( GPIOA -> IDR & GPIO_IDR_1) == 0)
  59:Core/Src/main.c **** #define SW3_Pressed  ( ( GPIOA -> IDR & GPIO_IDR_3) == 0)
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** int main (void)
  62:Core/Src/main.c **** {
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****     SetClock;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR2_0; //Pull up sw2
  67:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR1_0; //Pull up sw2
  68:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR3_0; //Pull up sw2
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****     init_LCD();
  71:Core/Src/main.c ****     uint16_t score = 0;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****     init_game();
  74:Core/Src/main.c ****     update_game();
  75:Core/Src/main.c ****     init_interrupts();
  76:Core/Src/main.c ****     int maximum_speed = 100000;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     while (1){
  79:Core/Src/main.c ****         score++;
  80:Core/Src/main.c ****         delay(maximum_speed);
  81:Core/Src/main.c ****         new_state(score);
  82:Core/Src/main.c ****         setScore(score);
  83:Core/Src/main.c ****         if (score < 10){
  84:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *10000;
  85:Core/Src/main.c ****         }
  86:Core/Src/main.c ****         else if( score < 30 ){
  87:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *5000;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****         }
  90:Core/Src/main.c ****         else{
  91:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *1000;
  92:Core/Src/main.c ****         }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****         if (maximum_speed < 19000){ //Minimum speed
  95:Core/Src/main.c ****             maximum_speed = 19000;
  96:Core/Src/main.c ****         }
  97:Core/Src/main.c ****     }
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** }							// End of main
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** //====================================================================
 102:Core/Src/main.c **** // FUNCTION DEFINITIONS
 103:Core/Src/main.c **** //====================================================================
 104:Core/Src/main.c **** void init_interrupts(){
 839              		.loc 1 104 23 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 105:Core/Src/main.c ****     RCC->APB2ENR |= RCC_APB2ENR_SYSCFGCOMPEN; // Enable SYSCFG clock
 844              		.loc 1 105 5 view .LVU216
 845              		.loc 1 105 8 is_stmt 0 view .LVU217
 846 0000 0B4A     		ldr	r2, .L54
 847 0002 9369     		ldr	r3, [r2, #24]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 27


 848              		.loc 1 105 18 view .LVU218
 849 0004 0121     		movs	r1, #1
 850 0006 0B43     		orrs	r3, r1
 851 0008 9361     		str	r3, [r2, #24]
 106:Core/Src/main.c ****     SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI1_PA; // Map EXTI1 to PA1 (SW1)
 852              		.loc 1 106 5 is_stmt 1 view .LVU219
 853              		.loc 1 106 19 is_stmt 0 view .LVU220
 854 000a 0A4B     		ldr	r3, .L54+4
 855 000c 9A68     		ldr	r2, [r3, #8]
 856              		.loc 1 106 23 view .LVU221
 857 000e 9A60     		str	r2, [r3, #8]
 107:Core/Src/main.c ****     SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI3_PA; // Map EXTI3 to PA3 (SW3)
 858              		.loc 1 107 5 is_stmt 1 view .LVU222
 859              		.loc 1 107 19 is_stmt 0 view .LVU223
 860 0010 9A68     		ldr	r2, [r3, #8]
 861              		.loc 1 107 23 view .LVU224
 862 0012 9A60     		str	r2, [r3, #8]
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     EXTI->IMR |= EXTI_IMR_MR1 | EXTI_IMR_MR3; // Unmask EXTI1 and EXTI3
 863              		.loc 1 109 5 is_stmt 1 view .LVU225
 864              		.loc 1 109 9 is_stmt 0 view .LVU226
 865 0014 084B     		ldr	r3, .L54+8
 866 0016 1A68     		ldr	r2, [r3]
 867              		.loc 1 109 15 view .LVU227
 868 0018 0931     		adds	r1, r1, #9
 869 001a 0A43     		orrs	r2, r1
 870 001c 1A60     		str	r2, [r3]
 110:Core/Src/main.c ****     EXTI->RTSR |= EXTI_RTSR_TR1 | EXTI_RTSR_TR3; // Trigger on rising edge
 871              		.loc 1 110 5 is_stmt 1 view .LVU228
 872              		.loc 1 110 9 is_stmt 0 view .LVU229
 873 001e 9A68     		ldr	r2, [r3, #8]
 874              		.loc 1 110 16 view .LVU230
 875 0020 0A43     		orrs	r2, r1
 876 0022 9A60     		str	r2, [r3, #8]
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     NVIC_EnableIRQ(EXTI0_1_IRQn); // Enable EXTI0_1 interrupt
 877              		.loc 1 112 5 is_stmt 1 view .LVU231
 878              	.LVL34:
 879              	.LBB6:
 880              	.LBI6:
 881              		.file 3 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 28


  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 29


  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 30


 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 31


 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 32


 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 33


 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 34


 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 35


 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 36


 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 37


 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 38


 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 882              		.loc 3 623 22 view .LVU232
 883              	.LBB7:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 884              		.loc 3 625 3 view .LVU233
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 885              		.loc 3 627 5 view .LVU234
 886              		.loc 3 627 20 is_stmt 0 view .LVU235
 887 0024 054B     		ldr	r3, .L54+12
 888 0026 2022     		movs	r2, #32
 889 0028 1A60     		str	r2, [r3]
 890              	.LVL35:
 891              		.loc 3 627 20 view .LVU236
 892              	.LBE7:
 893              	.LBE6:
 113:Core/Src/main.c ****     NVIC_EnableIRQ(EXTI2_3_IRQn); // Enable EXTI2_3 interrupt
 894              		.loc 1 113 5 is_stmt 1 view .LVU237
 895              	.LBB8:
 896              	.LBI8:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 39


 623:Drivers/CMSIS/Include/core_cm0.h **** {
 897              		.loc 3 623 22 view .LVU238
 898              	.LBB9:
 625:Drivers/CMSIS/Include/core_cm0.h ****   {
 899              		.loc 3 625 3 view .LVU239
 900              		.loc 3 627 5 view .LVU240
 901              		.loc 3 627 20 is_stmt 0 view .LVU241
 902 002a 2032     		adds	r2, r2, #32
 903 002c 1A60     		str	r2, [r3]
 904              	.LVL36:
 905              		.loc 3 627 20 view .LVU242
 906              	.LBE9:
 907              	.LBE8:
 114:Core/Src/main.c **** }
 908              		.loc 1 114 1 view .LVU243
 909              		@ sp needed
 910 002e 7047     		bx	lr
 911              	.L55:
 912              		.align	2
 913              	.L54:
 914 0030 00100240 		.word	1073876992
 915 0034 00000140 		.word	1073807360
 916 0038 00040140 		.word	1073808384
 917 003c 00E100E0 		.word	-536813312
 918              		.cfi_endproc
 919              	.LFE50:
 921              		.section	.text.update_game,"ax",%progbits
 922              		.align	1
 923              		.global	update_game
 924              		.syntax unified
 925              		.code	16
 926              		.thumb_func
 928              	update_game:
 929              	.LFB54:
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** void setScore(int score){
 117:Core/Src/main.c ****     char score_str[4];
 118:Core/Src/main.c ****     sprintf(score_str, "%03d", score);
 119:Core/Src/main.c ****     line_one[7] = score_str[0];
 120:Core/Src/main.c ****     line_one[8] = score_str[1];
 121:Core/Src/main.c ****     line_one[9] = score_str[2];
 122:Core/Src/main.c ****     update_game();
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** void up(){
 126:Core/Src/main.c ****     if (up_bad()){gameOver();};
 127:Core/Src/main.c ****     line_one[15] ='o';
 128:Core/Src/main.c ****     line_two[15] = ' ';
 129:Core/Src/main.c ****     update_game();
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void down(){
 133:Core/Src/main.c ****     if (down_bad()){gameOver();};
 134:Core/Src/main.c ****     line_one[15]=' ';
 135:Core/Src/main.c ****     line_two[15] = 'o';
 136:Core/Src/main.c ****     update_game();
 137:Core/Src/main.c **** }
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 40


 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** void update_game(){
 930              		.loc 1 140 19 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934 0000 10B5     		push	{r4, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 4, -8
 937              		.cfi_offset 14, -4
 141:Core/Src/main.c ****     lcd_command(CLEAR);
 938              		.loc 1 141 5 view .LVU245
 939 0002 0120     		movs	r0, #1
 940 0004 FFF7FEFF 		bl	lcd_command
 941              	.LVL37:
 142:Core/Src/main.c ****     lcd_putstring(line_one);
 942              		.loc 1 142 5 view .LVU246
 943 0008 0448     		ldr	r0, .L57
 944 000a FFF7FEFF 		bl	lcd_putstring
 945              	.LVL38:
 143:Core/Src/main.c ****     lcd_command(LINE_TWO);
 946              		.loc 1 143 5 view .LVU247
 947 000e C020     		movs	r0, #192
 948 0010 FFF7FEFF 		bl	lcd_command
 949              	.LVL39:
 144:Core/Src/main.c ****     lcd_putstring(line_two);
 950              		.loc 1 144 5 view .LVU248
 951 0014 0248     		ldr	r0, .L57+4
 952 0016 FFF7FEFF 		bl	lcd_putstring
 953              	.LVL40:
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** }
 954              		.loc 1 146 1 is_stmt 0 view .LVU249
 955              		@ sp needed
 956 001a 10BD     		pop	{r4, pc}
 957              	.L58:
 958              		.align	2
 959              	.L57:
 960 001c 00000000 		.word	line_one
 961 0020 00000000 		.word	line_two
 962              		.cfi_endproc
 963              	.LFE54:
 965              		.section	.rodata.setScore.str1.4,"aMS",%progbits,1
 966              		.align	2
 967              	.LC2:
 968 0000 25303364 		.ascii	"%03d\000"
 968      00
 969              		.section	.text.setScore,"ax",%progbits
 970              		.align	1
 971              		.global	setScore
 972              		.syntax unified
 973              		.code	16
 974              		.thumb_func
 976              	setScore:
 977              	.LVL41:
 978              	.LFB51:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 41


 116:Core/Src/main.c ****     char score_str[4];
 979              		.loc 1 116 25 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Core/Src/main.c ****     char score_str[4];
 983              		.loc 1 116 25 is_stmt 0 view .LVU251
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 82B0     		sub	sp, sp, #8
 989              		.cfi_def_cfa_offset 16
 990 0004 0200     		movs	r2, r0
 117:Core/Src/main.c ****     sprintf(score_str, "%03d", score);
 991              		.loc 1 117 5 is_stmt 1 view .LVU252
 118:Core/Src/main.c ****     line_one[7] = score_str[0];
 992              		.loc 1 118 5 view .LVU253
 993 0006 0849     		ldr	r1, .L60
 994 0008 01AC     		add	r4, sp, #4
 995 000a 2000     		movs	r0, r4
 996              	.LVL42:
 118:Core/Src/main.c ****     line_one[7] = score_str[0];
 997              		.loc 1 118 5 is_stmt 0 view .LVU254
 998 000c FFF7FEFF 		bl	sprintf
 999              	.LVL43:
 119:Core/Src/main.c ****     line_one[8] = score_str[1];
 1000              		.loc 1 119 5 is_stmt 1 view .LVU255
 119:Core/Src/main.c ****     line_one[8] = score_str[1];
 1001              		.loc 1 119 28 is_stmt 0 view .LVU256
 1002 0010 2278     		ldrb	r2, [r4]
 119:Core/Src/main.c ****     line_one[8] = score_str[1];
 1003              		.loc 1 119 17 view .LVU257
 1004 0012 064B     		ldr	r3, .L60+4
 1005 0014 DA71     		strb	r2, [r3, #7]
 120:Core/Src/main.c ****     line_one[9] = score_str[2];
 1006              		.loc 1 120 5 is_stmt 1 view .LVU258
 120:Core/Src/main.c ****     line_one[9] = score_str[2];
 1007              		.loc 1 120 28 is_stmt 0 view .LVU259
 1008 0016 6278     		ldrb	r2, [r4, #1]
 120:Core/Src/main.c ****     line_one[9] = score_str[2];
 1009              		.loc 1 120 17 view .LVU260
 1010 0018 1A72     		strb	r2, [r3, #8]
 121:Core/Src/main.c ****     update_game();
 1011              		.loc 1 121 5 is_stmt 1 view .LVU261
 121:Core/Src/main.c ****     update_game();
 1012              		.loc 1 121 28 is_stmt 0 view .LVU262
 1013 001a A278     		ldrb	r2, [r4, #2]
 121:Core/Src/main.c ****     update_game();
 1014              		.loc 1 121 17 view .LVU263
 1015 001c 5A72     		strb	r2, [r3, #9]
 122:Core/Src/main.c **** }
 1016              		.loc 1 122 5 is_stmt 1 view .LVU264
 1017 001e FFF7FEFF 		bl	update_game
 1018              	.LVL44:
 123:Core/Src/main.c **** 
 1019              		.loc 1 123 1 is_stmt 0 view .LVU265
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 42


 1020 0022 02B0     		add	sp, sp, #8
 1021              		@ sp needed
 1022 0024 10BD     		pop	{r4, pc}
 1023              	.L61:
 1024 0026 C046     		.align	2
 1025              	.L60:
 1026 0028 00000000 		.word	.LC2
 1027 002c 00000000 		.word	line_one
 1028              		.cfi_endproc
 1029              	.LFE51:
 1031              		.section	.text.up_bad,"ax",%progbits
 1032              		.align	1
 1033              		.global	up_bad
 1034              		.syntax unified
 1035              		.code	16
 1036              		.thumb_func
 1038              	up_bad:
 1039              	.LFB55:
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** int up_bad(){
 1040              		.loc 1 148 13 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     if ( (line_one[15] != 'o') && (line_one[15] != ' ')){
 1045              		.loc 1 150 5 view .LVU267
 1046              		.loc 1 150 19 is_stmt 0 view .LVU268
 1047 0000 054B     		ldr	r3, .L66
 1048 0002 DB7B     		ldrb	r3, [r3, #15]
 1049              		.loc 1 150 8 view .LVU269
 1050 0004 6F2B     		cmp	r3, #111
 1051 0006 03D0     		beq	.L64
 1052              		.loc 1 150 32 discriminator 1 view .LVU270
 1053 0008 202B     		cmp	r3, #32
 1054 000a 03D1     		bne	.L65
 151:Core/Src/main.c ****         return 1;
 152:Core/Src/main.c ****     }
 153:Core/Src/main.c ****     return 0;
 1055              		.loc 1 153 12 view .LVU271
 1056 000c 0020     		movs	r0, #0
 1057 000e 00E0     		b	.L62
 1058              	.L64:
 1059 0010 0020     		movs	r0, #0
 1060              	.L62:
 154:Core/Src/main.c **** }
 1061              		.loc 1 154 1 view .LVU272
 1062              		@ sp needed
 1063 0012 7047     		bx	lr
 1064              	.L65:
 151:Core/Src/main.c ****         return 1;
 1065              		.loc 1 151 16 view .LVU273
 1066 0014 0120     		movs	r0, #1
 1067 0016 FCE7     		b	.L62
 1068              	.L67:
 1069              		.align	2
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 43


 1070              	.L66:
 1071 0018 00000000 		.word	line_one
 1072              		.cfi_endproc
 1073              	.LFE55:
 1075              		.section	.rodata.gameOver.str1.4,"aMS",%progbits,1
 1076              		.align	2
 1077              	.LC7:
 1078 0000 47414D45 		.ascii	"GAME OVER (^_^)\000"
 1078      204F5645 
 1078      5220285E 
 1078      5F5E2900 
 1079              		.align	2
 1080              	.LC9:
 1081 0010 5265706C 		.ascii	"Replay: sw4\000"
 1081      61793A20 
 1081      73773400 
 1082              		.section	.text.gameOver,"ax",%progbits
 1083              		.align	1
 1084              		.global	gameOver
 1085              		.syntax unified
 1086              		.code	16
 1087              		.thumb_func
 1089              	gameOver:
 1090              	.LFB56:
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** void gameOver(){
 1091              		.loc 1 157 16 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ Volatile: function does not return.
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096 0000 10B5     		push	{r4, lr}
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 4, -8
 1099              		.cfi_offset 14, -4
 158:Core/Src/main.c ****     notGameOver = 0;
 1100              		.loc 1 158 5 view .LVU275
 1101              		.loc 1 158 17 is_stmt 0 view .LVU276
 1102 0002 084B     		ldr	r3, .L70
 1103 0004 0022     		movs	r2, #0
 1104 0006 1A60     		str	r2, [r3]
 159:Core/Src/main.c ****     lcd_command(CLEAR);
 1105              		.loc 1 159 5 is_stmt 1 view .LVU277
 1106 0008 0120     		movs	r0, #1
 1107 000a FFF7FEFF 		bl	lcd_command
 1108              	.LVL45:
 160:Core/Src/main.c ****     lcd_putstring("GAME OVER (^_^)");
 1109              		.loc 1 160 5 view .LVU278
 1110 000e 0648     		ldr	r0, .L70+4
 1111 0010 FFF7FEFF 		bl	lcd_putstring
 1112              	.LVL46:
 161:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1113              		.loc 1 161 5 view .LVU279
 1114 0014 C020     		movs	r0, #192
 1115 0016 FFF7FEFF 		bl	lcd_command
 1116              	.LVL47:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 44


 162:Core/Src/main.c ****     lcd_putstring("Replay: sw4");
 1117              		.loc 1 162 5 view .LVU280
 1118 001a 0448     		ldr	r0, .L70+8
 1119 001c FFF7FEFF 		bl	lcd_putstring
 1120              	.LVL48:
 1121              	.L69:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     while(1);
 1122              		.loc 1 164 5 view .LVU281
 1123              		.loc 1 164 10 view .LVU282
 1124 0020 FEE7     		b	.L69
 1125              	.L71:
 1126 0022 C046     		.align	2
 1127              	.L70:
 1128 0024 00000000 		.word	notGameOver
 1129 0028 00000000 		.word	.LC7
 1130 002c 10000000 		.word	.LC9
 1131              		.cfi_endproc
 1132              	.LFE56:
 1134              		.section	.text.up,"ax",%progbits
 1135              		.align	1
 1136              		.global	up
 1137              		.syntax unified
 1138              		.code	16
 1139              		.thumb_func
 1141              	up:
 1142              	.LFB52:
 125:Core/Src/main.c ****     if (up_bad()){gameOver();};
 1143              		.loc 1 125 10 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147 0000 10B5     		push	{r4, lr}
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 4, -8
 1150              		.cfi_offset 14, -4
 126:Core/Src/main.c ****     line_one[15] ='o';
 1151              		.loc 1 126 5 view .LVU284
 126:Core/Src/main.c ****     line_one[15] ='o';
 1152              		.loc 1 126 9 is_stmt 0 view .LVU285
 1153 0002 FFF7FEFF 		bl	up_bad
 1154              	.LVL49:
 126:Core/Src/main.c ****     line_one[15] ='o';
 1155              		.loc 1 126 8 discriminator 1 view .LVU286
 1156 0006 0028     		cmp	r0, #0
 1157 0008 08D1     		bne	.L74
 126:Core/Src/main.c ****     line_one[15] ='o';
 1158              		.loc 1 126 31 is_stmt 1 discriminator 3 view .LVU287
 127:Core/Src/main.c ****     line_two[15] = ' ';
 1159              		.loc 1 127 5 view .LVU288
 127:Core/Src/main.c ****     line_two[15] = ' ';
 1160              		.loc 1 127 18 is_stmt 0 view .LVU289
 1161 000a 054B     		ldr	r3, .L75
 1162 000c 6F22     		movs	r2, #111
 1163 000e DA73     		strb	r2, [r3, #15]
 128:Core/Src/main.c ****     update_game();
 1164              		.loc 1 128 5 is_stmt 1 view .LVU290
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 45


 128:Core/Src/main.c ****     update_game();
 1165              		.loc 1 128 18 is_stmt 0 view .LVU291
 1166 0010 044B     		ldr	r3, .L75+4
 1167 0012 4F3A     		subs	r2, r2, #79
 1168 0014 DA73     		strb	r2, [r3, #15]
 129:Core/Src/main.c **** }
 1169              		.loc 1 129 5 is_stmt 1 view .LVU292
 1170 0016 FFF7FEFF 		bl	update_game
 1171              	.LVL50:
 130:Core/Src/main.c **** 
 1172              		.loc 1 130 1 is_stmt 0 view .LVU293
 1173              		@ sp needed
 1174 001a 10BD     		pop	{r4, pc}
 1175              	.L74:
 126:Core/Src/main.c ****     line_one[15] ='o';
 1176              		.loc 1 126 19 is_stmt 1 discriminator 1 view .LVU294
 1177 001c FFF7FEFF 		bl	gameOver
 1178              	.LVL51:
 1179              	.L76:
 1180              		.align	2
 1181              	.L75:
 1182 0020 00000000 		.word	line_one
 1183 0024 00000000 		.word	line_two
 1184              		.cfi_endproc
 1185              	.LFE52:
 1187              		.section	.text.down_bad,"ax",%progbits
 1188              		.align	1
 1189              		.global	down_bad
 1190              		.syntax unified
 1191              		.code	16
 1192              		.thumb_func
 1194              	down_bad:
 1195              	.LFB57:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** int down_bad(){
 1196              		.loc 1 168 15 view -0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 0
 1199              		@ frame_needed = 0, uses_anonymous_args = 0
 1200              		@ link register save eliminated.
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****     if ( (line_two[15] != 'o') && (line_two[15] != ' ')){
 1201              		.loc 1 170 5 view .LVU296
 1202              		.loc 1 170 19 is_stmt 0 view .LVU297
 1203 0000 054B     		ldr	r3, .L81
 1204 0002 DB7B     		ldrb	r3, [r3, #15]
 1205              		.loc 1 170 8 view .LVU298
 1206 0004 6F2B     		cmp	r3, #111
 1207 0006 03D0     		beq	.L79
 1208              		.loc 1 170 32 discriminator 1 view .LVU299
 1209 0008 202B     		cmp	r3, #32
 1210 000a 03D1     		bne	.L80
 171:Core/Src/main.c ****         return 1;
 172:Core/Src/main.c ****     }
 173:Core/Src/main.c ****     return 0;
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 46


 1211              		.loc 1 173 12 view .LVU300
 1212 000c 0020     		movs	r0, #0
 1213 000e 00E0     		b	.L77
 1214              	.L79:
 1215 0010 0020     		movs	r0, #0
 1216              	.L77:
 174:Core/Src/main.c **** }
 1217              		.loc 1 174 1 view .LVU301
 1218              		@ sp needed
 1219 0012 7047     		bx	lr
 1220              	.L80:
 171:Core/Src/main.c ****         return 1;
 1221              		.loc 1 171 16 view .LVU302
 1222 0014 0120     		movs	r0, #1
 1223 0016 FCE7     		b	.L77
 1224              	.L82:
 1225              		.align	2
 1226              	.L81:
 1227 0018 00000000 		.word	line_two
 1228              		.cfi_endproc
 1229              	.LFE57:
 1231              		.section	.text.down,"ax",%progbits
 1232              		.align	1
 1233              		.global	down
 1234              		.syntax unified
 1235              		.code	16
 1236              		.thumb_func
 1238              	down:
 1239              	.LFB53:
 132:Core/Src/main.c ****     if (down_bad()){gameOver();};
 1240              		.loc 1 132 12 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244 0000 10B5     		push	{r4, lr}
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 4, -8
 1247              		.cfi_offset 14, -4
 133:Core/Src/main.c ****     line_one[15]=' ';
 1248              		.loc 1 133 5 view .LVU304
 133:Core/Src/main.c ****     line_one[15]=' ';
 1249              		.loc 1 133 9 is_stmt 0 view .LVU305
 1250 0002 FFF7FEFF 		bl	down_bad
 1251              	.LVL52:
 133:Core/Src/main.c ****     line_one[15]=' ';
 1252              		.loc 1 133 8 discriminator 1 view .LVU306
 1253 0006 0028     		cmp	r0, #0
 1254 0008 08D1     		bne	.L85
 133:Core/Src/main.c ****     line_one[15]=' ';
 1255              		.loc 1 133 33 is_stmt 1 discriminator 3 view .LVU307
 134:Core/Src/main.c ****     line_two[15] = 'o';
 1256              		.loc 1 134 5 view .LVU308
 134:Core/Src/main.c ****     line_two[15] = 'o';
 1257              		.loc 1 134 17 is_stmt 0 view .LVU309
 1258 000a 054B     		ldr	r3, .L86
 1259 000c 2022     		movs	r2, #32
 1260 000e DA73     		strb	r2, [r3, #15]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 47


 135:Core/Src/main.c ****     update_game();
 1261              		.loc 1 135 5 is_stmt 1 view .LVU310
 135:Core/Src/main.c ****     update_game();
 1262              		.loc 1 135 18 is_stmt 0 view .LVU311
 1263 0010 044B     		ldr	r3, .L86+4
 1264 0012 4F32     		adds	r2, r2, #79
 1265 0014 DA73     		strb	r2, [r3, #15]
 136:Core/Src/main.c **** }
 1266              		.loc 1 136 5 is_stmt 1 view .LVU312
 1267 0016 FFF7FEFF 		bl	update_game
 1268              	.LVL53:
 137:Core/Src/main.c **** 
 1269              		.loc 1 137 1 is_stmt 0 view .LVU313
 1270              		@ sp needed
 1271 001a 10BD     		pop	{r4, pc}
 1272              	.L85:
 133:Core/Src/main.c ****     line_one[15]=' ';
 1273              		.loc 1 133 21 is_stmt 1 discriminator 1 view .LVU314
 1274 001c FFF7FEFF 		bl	gameOver
 1275              	.LVL54:
 1276              	.L87:
 1277              		.align	2
 1278              	.L86:
 1279 0020 00000000 		.word	line_one
 1280 0024 00000000 		.word	line_two
 1281              		.cfi_endproc
 1282              	.LFE53:
 1284              		.section	.text.new_state,"ax",%progbits
 1285              		.align	1
 1286              		.global	new_state
 1287              		.syntax unified
 1288              		.code	16
 1289              		.thumb_func
 1291              	new_state:
 1292              	.LVL55:
 1293              	.LFB58:
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** void new_state(uint16_t score){
 1294              		.loc 1 176 31 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		.loc 1 176 31 is_stmt 0 view .LVU316
 1299 0000 70B5     		push	{r4, r5, r6, lr}
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     //check if  not losing
 180:Core/Src/main.c ****     if ( line_one[14] == '~' && line_one[15] == 'o'){
 1305              		.loc 1 180 5 is_stmt 1 view .LVU317
 1306              		.loc 1 180 18 is_stmt 0 view .LVU318
 1307 0002 3C4B     		ldr	r3, .L107
 1308 0004 9B7B     		ldrb	r3, [r3, #14]
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 48


 1309              		.loc 1 180 8 view .LVU319
 1310 0006 7E2B     		cmp	r3, #126
 1311 0008 1AD0     		beq	.L103
 1312              	.L89:
 181:Core/Src/main.c ****         gameOver();
 182:Core/Src/main.c ****     }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****     if ( line_two[14] == '~' && line_two[15] == 'o'){
 1313              		.loc 1 184 5 is_stmt 1 view .LVU320
 1314              		.loc 1 184 18 is_stmt 0 view .LVU321
 1315 000a 3B4B     		ldr	r3, .L107+4
 1316 000c 9B7B     		ldrb	r3, [r3, #14]
 1317              		.loc 1 184 8 view .LVU322
 1318 000e 7E2B     		cmp	r3, #126
 1319 0010 1CD0     		beq	.L104
 1320              	.L90:
 185:Core/Src/main.c ****         gameOver();
 186:Core/Src/main.c ****     }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****     u_int8_t wasUp = 0;
 1321              		.loc 1 188 5 is_stmt 1 view .LVU323
 1322              	.LVL56:
 189:Core/Src/main.c ****     if (line_one[15] == 'o'){ wasUp = 1;}
 1323              		.loc 1 189 5 view .LVU324
 1324              		.loc 1 189 17 is_stmt 0 view .LVU325
 1325 0012 384B     		ldr	r3, .L107
 1326 0014 DB7B     		ldrb	r3, [r3, #15]
 1327              		.loc 1 189 8 view .LVU326
 1328 0016 6F2B     		cmp	r3, #111
 1329 0018 1ED0     		beq	.L100
 188:Core/Src/main.c ****     if (line_one[15] == 'o'){ wasUp = 1;}
 1330              		.loc 1 188 14 view .LVU327
 1331 001a 0025     		movs	r5, #0
 1332              	.L91:
 1333              	.LVL57:
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****     uint8_t odds = ((float)(score/200))*10;
 1334              		.loc 1 191 5 is_stmt 1 view .LVU328
 1335              		.loc 1 191 34 is_stmt 0 view .LVU329
 1336 001c C821     		movs	r1, #200
 1337 001e FFF7FEFF 		bl	__aeabi_uidiv
 1338              	.LVL58:
 1339              		.loc 1 191 34 view .LVU330
 1340 0022 80B2     		uxth	r0, r0
 1341              		.loc 1 191 21 view .LVU331
 1342 0024 FFF7FEFF 		bl	__aeabi_i2f
 1343              	.LVL59:
 1344              		.loc 1 191 40 view .LVU332
 1345 0028 3449     		ldr	r1, .L107+8
 1346 002a FFF7FEFF 		bl	__aeabi_fmul
 1347              	.LVL60:
 1348              		.loc 1 191 13 view .LVU333
 1349 002e FFF7FEFF 		bl	__aeabi_f2uiz
 1350              	.LVL61:
 1351 0032 C4B2     		uxtb	r4, r0
 1352              	.LVL62:
 192:Core/Src/main.c ****     if (odds == 0){ odds = 1;}
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 49


 1353              		.loc 1 192 5 is_stmt 1 view .LVU334
 1354              		.loc 1 192 8 is_stmt 0 view .LVU335
 1355 0034 002C     		cmp	r4, #0
 1356 0036 11D0     		beq	.L101
 193:Core/Src/main.c ****     if (odds > 7){ odds =7;}  
 1357              		.loc 1 193 5 is_stmt 1 view .LVU336
 1358              		.loc 1 193 8 is_stmt 0 view .LVU337
 1359 0038 072C     		cmp	r4, #7
 1360 003a 10D9     		bls	.L92
 1361              		.loc 1 193 25 discriminator 1 view .LVU338
 1362 003c 0724     		movs	r4, #7
 1363              	.LVL63:
 1364              		.loc 1 193 25 discriminator 1 view .LVU339
 1365 003e 0EE0     		b	.L92
 1366              	.LVL64:
 1367              	.L103:
 180:Core/Src/main.c ****         gameOver();
 1368              		.loc 1 180 41 discriminator 1 view .LVU340
 1369 0040 2C4B     		ldr	r3, .L107
 1370 0042 DB7B     		ldrb	r3, [r3, #15]
 180:Core/Src/main.c ****         gameOver();
 1371              		.loc 1 180 30 discriminator 1 view .LVU341
 1372 0044 6F2B     		cmp	r3, #111
 1373 0046 E0D1     		bne	.L89
 181:Core/Src/main.c ****     }
 1374              		.loc 1 181 9 is_stmt 1 view .LVU342
 1375 0048 FFF7FEFF 		bl	gameOver
 1376              	.LVL65:
 1377              	.L104:
 184:Core/Src/main.c ****         gameOver();
 1378              		.loc 1 184 41 is_stmt 0 discriminator 1 view .LVU343
 1379 004c 2A4B     		ldr	r3, .L107+4
 1380 004e DB7B     		ldrb	r3, [r3, #15]
 184:Core/Src/main.c ****         gameOver();
 1381              		.loc 1 184 30 discriminator 1 view .LVU344
 1382 0050 6F2B     		cmp	r3, #111
 1383 0052 DED1     		bne	.L90
 185:Core/Src/main.c ****     }
 1384              		.loc 1 185 9 is_stmt 1 view .LVU345
 1385 0054 FFF7FEFF 		bl	gameOver
 1386              	.LVL66:
 1387              	.L100:
 189:Core/Src/main.c **** 
 1388              		.loc 1 189 37 is_stmt 0 discriminator 1 view .LVU346
 1389 0058 0125     		movs	r5, #1
 1390 005a DFE7     		b	.L91
 1391              	.LVL67:
 1392              	.L101:
 192:Core/Src/main.c ****     if (odds > 7){ odds =7;}  
 1393              		.loc 1 192 26 discriminator 1 view .LVU347
 1394 005c 0124     		movs	r4, #1
 1395              	.LVL68:
 1396              	.L92:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     
 196:Core/Src/main.c ****     for (uint8_t i = 15 ; i > 0; i = i -1 ){ 
 1397              		.loc 1 196 5 is_stmt 1 view .LVU348
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 50


 1398              	.LBB10:
 1399              		.loc 1 196 10 view .LVU349
 1400              		.loc 1 196 18 is_stmt 0 view .LVU350
 1401 005e 0F23     		movs	r3, #15
 1402              		.loc 1 196 5 view .LVU351
 1403 0060 06E0     		b	.L93
 1404              	.LVL69:
 1405              	.L95:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****         if (i > 11 ){
 1406              		.loc 1 198 9 is_stmt 1 view .LVU352
 1407              		.loc 1 198 12 is_stmt 0 view .LVU353
 1408 0062 0B2B     		cmp	r3, #11
 1409 0064 1CD8     		bhi	.L105
 1410              	.L94:
 199:Core/Src/main.c ****             line_one[i] = line_one[i-1];
 200:Core/Src/main.c ****         }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****         line_two[i] = line_two[i-1];
 1411              		.loc 1 202 9 is_stmt 1 view .LVU354
 1412              		.loc 1 202 33 is_stmt 0 view .LVU355
 1413 0066 5A1E     		subs	r2, r3, #1
 1414              		.loc 1 202 31 view .LVU356
 1415 0068 2349     		ldr	r1, .L107+4
 1416 006a 885C     		ldrb	r0, [r1, r2]
 1417              		.loc 1 202 21 view .LVU357
 1418 006c C854     		strb	r0, [r1, r3]
 196:Core/Src/main.c **** 
 1419              		.loc 1 196 36 is_stmt 1 discriminator 2 view .LVU358
 1420 006e D3B2     		uxtb	r3, r2
 1421              	.LVL70:
 1422              	.L93:
 196:Core/Src/main.c **** 
 1423              		.loc 1 196 29 discriminator 1 view .LVU359
 1424 0070 002B     		cmp	r3, #0
 1425 0072 F6D1     		bne	.L95
 1426              	.LBE10:
 203:Core/Src/main.c ****     }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****     line_two[0] =' ';
 1427              		.loc 1 205 5 view .LVU360
 1428              		.loc 1 205 17 is_stmt 0 view .LVU361
 1429 0074 204B     		ldr	r3, .L107+4
 1430              	.LVL71:
 1431              		.loc 1 205 17 view .LVU362
 1432 0076 2022     		movs	r2, #32
 1433 0078 1A70     		strb	r2, [r3]
 206:Core/Src/main.c ****     line_one[11] =' ';
 1434              		.loc 1 206 5 is_stmt 1 view .LVU363
 1435              		.loc 1 206 18 is_stmt 0 view .LVU364
 1436 007a 1E4B     		ldr	r3, .L107
 1437 007c DA72     		strb	r2, [r3, #11]
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     if (wasUp){ line_one[15] = 'o';}
 1438              		.loc 1 208 5 is_stmt 1 view .LVU365
 1439              		.loc 1 208 8 is_stmt 0 view .LVU366
 1440 007e 002D     		cmp	r5, #0
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 51


 1441 0080 13D0     		beq	.L96
 1442              		.loc 1 208 17 is_stmt 1 discriminator 1 view .LVU367
 1443              		.loc 1 208 30 is_stmt 0 discriminator 1 view .LVU368
 1444 0082 4F32     		adds	r2, r2, #79
 1445 0084 DA73     		strb	r2, [r3, #15]
 1446              	.L97:
 209:Core/Src/main.c ****     else{ line_two[15] = 'o';}
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     uint8_t shouldgen = (rand() % 10) + 1;
 1447              		.loc 1 211 5 is_stmt 1 view .LVU369
 1448              		.loc 1 211 26 is_stmt 0 view .LVU370
 1449 0086 FFF7FEFF 		bl	rand
 1450              	.LVL72:
 1451              		.loc 1 211 33 discriminator 1 view .LVU371
 1452 008a 0A21     		movs	r1, #10
 1453 008c FFF7FEFF 		bl	__aeabi_idivmod
 1454              	.LVL73:
 1455              		.loc 1 211 39 discriminator 1 view .LVU372
 1456 0090 CBB2     		uxtb	r3, r1
 1457              		.loc 1 211 13 discriminator 1 view .LVU373
 1458 0092 0133     		adds	r3, r3, #1
 1459 0094 DBB2     		uxtb	r3, r3
 1460              	.LVL74:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****     if (shouldgen > odds ){
 1461              		.loc 1 213 5 is_stmt 1 view .LVU374
 1462              		.loc 1 213 8 is_stmt 0 view .LVU375
 1463 0096 9C42     		cmp	r4, r3
 1464 0098 0BD3     		bcc	.L106
 1465              	.LVL75:
 1466              	.L98:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****         uint8_t line = rand() %4 ;
 216:Core/Src/main.c ****         if ( line == 0){  
 217:Core/Src/main.c ****             if ( line_two[11] == ' ' && line_two[10] == ' ' && line_two[12] == ' '){//Avoid two arr
 218:Core/Src/main.c ****                 line_one[11] = '~';
 219:Core/Src/main.c ****             }
 220:Core/Src/main.c ****         
 221:Core/Src/main.c ****         }
 222:Core/Src/main.c ****         else {
 223:Core/Src/main.c ****             if (  (line_two[1] = ' ') ){
 224:Core/Src/main.c ****             line_two[0] = '~'; 
 225:Core/Src/main.c ****             }
 226:Core/Src/main.c ****         }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****     update_game();
 1467              		.loc 1 230 5 is_stmt 1 view .LVU376
 1468 009a FFF7FEFF 		bl	update_game
 1469              	.LVL76:
 231:Core/Src/main.c **** }
 1470              		.loc 1 231 1 is_stmt 0 view .LVU377
 1471              		@ sp needed
 1472              	.LVL77:
 1473              	.LVL78:
 1474              		.loc 1 231 1 view .LVU378
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 52


 1475 009e 70BD     		pop	{r4, r5, r6, pc}
 1476              	.LVL79:
 1477              	.L105:
 1478              	.LBB11:
 199:Core/Src/main.c ****         }
 1479              		.loc 1 199 13 is_stmt 1 view .LVU379
 199:Core/Src/main.c ****         }
 1480              		.loc 1 199 37 is_stmt 0 view .LVU380
 1481 00a0 5A1E     		subs	r2, r3, #1
 199:Core/Src/main.c ****         }
 1482              		.loc 1 199 35 view .LVU381
 1483 00a2 1449     		ldr	r1, .L107
 1484 00a4 8A5C     		ldrb	r2, [r1, r2]
 199:Core/Src/main.c ****         }
 1485              		.loc 1 199 25 view .LVU382
 1486 00a6 CA54     		strb	r2, [r1, r3]
 1487 00a8 DDE7     		b	.L94
 1488              	.LVL80:
 1489              	.L96:
 199:Core/Src/main.c ****         }
 1490              		.loc 1 199 25 view .LVU383
 1491              	.LBE11:
 209:Core/Src/main.c **** 
 1492              		.loc 1 209 11 is_stmt 1 view .LVU384
 209:Core/Src/main.c **** 
 1493              		.loc 1 209 24 is_stmt 0 view .LVU385
 1494 00aa 134B     		ldr	r3, .L107+4
 1495 00ac 6F22     		movs	r2, #111
 1496 00ae DA73     		strb	r2, [r3, #15]
 1497 00b0 E9E7     		b	.L97
 1498              	.LVL81:
 1499              	.L106:
 1500              	.LBB12:
 215:Core/Src/main.c ****         if ( line == 0){  
 1501              		.loc 1 215 9 is_stmt 1 view .LVU386
 215:Core/Src/main.c ****         if ( line == 0){  
 1502              		.loc 1 215 24 is_stmt 0 view .LVU387
 1503 00b2 FFF7FEFF 		bl	rand
 1504              	.LVL82:
 215:Core/Src/main.c ****         if ( line == 0){  
 1505              		.loc 1 215 31 discriminator 1 view .LVU388
 1506 00b6 C217     		asrs	r2, r0, #31
 1507 00b8 920F     		lsrs	r2, r2, #30
 1508 00ba 8018     		adds	r0, r0, r2
 1509 00bc 0323     		movs	r3, #3
 1510 00be 0340     		ands	r3, r0
 1511 00c0 9B1A     		subs	r3, r3, r2
 215:Core/Src/main.c ****         if ( line == 0){  
 1512              		.loc 1 215 17 discriminator 1 view .LVU389
 1513 00c2 DBB2     		uxtb	r3, r3
 1514              	.LVL83:
 216:Core/Src/main.c ****             if ( line_two[11] == ' ' && line_two[10] == ' ' && line_two[12] == ' '){//Avoid two arr
 1515              		.loc 1 216 9 is_stmt 1 view .LVU390
 216:Core/Src/main.c ****             if ( line_two[11] == ' ' && line_two[10] == ' ' && line_two[12] == ' '){//Avoid two arr
 1516              		.loc 1 216 12 is_stmt 0 view .LVU391
 1517 00c4 002B     		cmp	r3, #0
 1518 00c6 0FD1     		bne	.L99
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 53


 217:Core/Src/main.c ****                 line_one[11] = '~';
 1519              		.loc 1 217 13 is_stmt 1 view .LVU392
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1520              		.loc 1 217 26 is_stmt 0 view .LVU393
 1521 00c8 0B4B     		ldr	r3, .L107+4
 1522              	.LVL84:
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1523              		.loc 1 217 26 view .LVU394
 1524 00ca DB7A     		ldrb	r3, [r3, #11]
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1525              		.loc 1 217 16 view .LVU395
 1526 00cc 202B     		cmp	r3, #32
 1527 00ce E4D1     		bne	.L98
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1528              		.loc 1 217 49 discriminator 1 view .LVU396
 1529 00d0 094B     		ldr	r3, .L107+4
 1530 00d2 9B7A     		ldrb	r3, [r3, #10]
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1531              		.loc 1 217 38 discriminator 1 view .LVU397
 1532 00d4 202B     		cmp	r3, #32
 1533 00d6 E0D1     		bne	.L98
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1534              		.loc 1 217 72 discriminator 2 view .LVU398
 1535 00d8 074B     		ldr	r3, .L107+4
 1536 00da 1B7B     		ldrb	r3, [r3, #12]
 217:Core/Src/main.c ****                 line_one[11] = '~';
 1537              		.loc 1 217 61 discriminator 2 view .LVU399
 1538 00dc 202B     		cmp	r3, #32
 1539 00de DCD1     		bne	.L98
 218:Core/Src/main.c ****             }
 1540              		.loc 1 218 17 is_stmt 1 view .LVU400
 218:Core/Src/main.c ****             }
 1541              		.loc 1 218 30 is_stmt 0 view .LVU401
 1542 00e0 044B     		ldr	r3, .L107
 1543 00e2 7E22     		movs	r2, #126
 1544              	.LVL85:
 218:Core/Src/main.c ****             }
 1545              		.loc 1 218 30 view .LVU402
 1546 00e4 DA72     		strb	r2, [r3, #11]
 1547 00e6 D8E7     		b	.L98
 1548              	.LVL86:
 1549              	.L99:
 223:Core/Src/main.c ****             line_two[0] = '~'; 
 1550              		.loc 1 223 13 is_stmt 1 view .LVU403
 223:Core/Src/main.c ****             line_two[0] = '~'; 
 1551              		.loc 1 223 32 is_stmt 0 view .LVU404
 1552 00e8 034B     		ldr	r3, .L107+4
 1553              	.LVL87:
 223:Core/Src/main.c ****             line_two[0] = '~'; 
 1554              		.loc 1 223 32 view .LVU405
 1555 00ea 2022     		movs	r2, #32
 1556              	.LVL88:
 223:Core/Src/main.c ****             line_two[0] = '~'; 
 1557              		.loc 1 223 32 view .LVU406
 1558 00ec 5A70     		strb	r2, [r3, #1]
 224:Core/Src/main.c ****             }
 1559              		.loc 1 224 13 is_stmt 1 view .LVU407
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 54


 224:Core/Src/main.c ****             }
 1560              		.loc 1 224 25 is_stmt 0 view .LVU408
 1561 00ee 5E32     		adds	r2, r2, #94
 1562 00f0 1A70     		strb	r2, [r3]
 1563 00f2 D2E7     		b	.L98
 1564              	.L108:
 1565              		.align	2
 1566              	.L107:
 1567 00f4 00000000 		.word	line_one
 1568 00f8 00000000 		.word	line_two
 1569 00fc 00002041 		.word	1092616192
 1570              	.LBE12:
 1571              		.cfi_endproc
 1572              	.LFE58:
 1574              		.section	.text.EXTI0_1_IRQHandler,"ax",%progbits
 1575              		.align	1
 1576              		.global	EXTI0_1_IRQHandler
 1577              		.syntax unified
 1578              		.code	16
 1579              		.thumb_func
 1581              	EXTI0_1_IRQHandler:
 1582              	.LFB59:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void EXTI0_1_IRQHandler(void) {
 1583              		.loc 1 234 31 is_stmt 1 view -0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587 0000 10B5     		push	{r4, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 4, -8
 1590              		.cfi_offset 14, -4
 235:Core/Src/main.c ****     if (notGameOver){
 1591              		.loc 1 235 5 view .LVU410
 1592              		.loc 1 235 9 is_stmt 0 view .LVU411
 1593 0002 084B     		ldr	r3, .L113
 1594 0004 1B68     		ldr	r3, [r3]
 1595              		.loc 1 235 8 view .LVU412
 1596 0006 002B     		cmp	r3, #0
 1597 0008 03D0     		beq	.L109
 236:Core/Src/main.c ****     if (EXTI->PR & EXTI_PR_PR1) { // Check if SW1 triggered the interrupt
 1598              		.loc 1 236 5 is_stmt 1 view .LVU413
 1599              		.loc 1 236 13 is_stmt 0 view .LVU414
 1600 000a 074B     		ldr	r3, .L113+4
 1601 000c 5B69     		ldr	r3, [r3, #20]
 1602              		.loc 1 236 8 view .LVU415
 1603 000e 9B07     		lsls	r3, r3, #30
 1604 0010 00D4     		bmi	.L112
 1605              	.L109:
 237:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR1;  // Clear the interrupt flag
 238:Core/Src/main.c ****         up();                     // Call the `up` function
 239:Core/Src/main.c ****     }}
 240:Core/Src/main.c **** }
 1606              		.loc 1 240 1 view .LVU416
 1607              		@ sp needed
 1608 0012 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 55


 1609              	.L112:
 237:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR1;  // Clear the interrupt flag
 1610              		.loc 1 237 9 is_stmt 1 view .LVU417
 237:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR1;  // Clear the interrupt flag
 1611              		.loc 1 237 13 is_stmt 0 view .LVU418
 1612 0014 044A     		ldr	r2, .L113+4
 1613 0016 5369     		ldr	r3, [r2, #20]
 237:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR1;  // Clear the interrupt flag
 1614              		.loc 1 237 18 view .LVU419
 1615 0018 0221     		movs	r1, #2
 1616 001a 0B43     		orrs	r3, r1
 1617 001c 5361     		str	r3, [r2, #20]
 238:Core/Src/main.c ****     }}
 1618              		.loc 1 238 9 is_stmt 1 view .LVU420
 1619 001e FFF7FEFF 		bl	up
 1620              	.LVL89:
 1621              		.loc 1 240 1 is_stmt 0 view .LVU421
 1622 0022 F6E7     		b	.L109
 1623              	.L114:
 1624              		.align	2
 1625              	.L113:
 1626 0024 00000000 		.word	notGameOver
 1627 0028 00040140 		.word	1073808384
 1628              		.cfi_endproc
 1629              	.LFE59:
 1631              		.section	.text.EXTI2_3_IRQHandler,"ax",%progbits
 1632              		.align	1
 1633              		.global	EXTI2_3_IRQHandler
 1634              		.syntax unified
 1635              		.code	16
 1636              		.thumb_func
 1638              	EXTI2_3_IRQHandler:
 1639              	.LFB60:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** void EXTI2_3_IRQHandler(void) {
 1640              		.loc 1 242 31 is_stmt 1 view -0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644 0000 10B5     		push	{r4, lr}
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 4, -8
 1647              		.cfi_offset 14, -4
 243:Core/Src/main.c ****     if (notGameOver){
 1648              		.loc 1 243 5 view .LVU423
 1649              		.loc 1 243 9 is_stmt 0 view .LVU424
 1650 0002 084B     		ldr	r3, .L119
 1651 0004 1B68     		ldr	r3, [r3]
 1652              		.loc 1 243 8 view .LVU425
 1653 0006 002B     		cmp	r3, #0
 1654 0008 03D0     		beq	.L115
 244:Core/Src/main.c ****     if (EXTI->PR & EXTI_PR_PR3) { // Check if SW3 triggered the interrupt
 1655              		.loc 1 244 5 is_stmt 1 view .LVU426
 1656              		.loc 1 244 13 is_stmt 0 view .LVU427
 1657 000a 074B     		ldr	r3, .L119+4
 1658 000c 5B69     		ldr	r3, [r3, #20]
 1659              		.loc 1 244 8 view .LVU428
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 56


 1660 000e 1B07     		lsls	r3, r3, #28
 1661 0010 00D4     		bmi	.L118
 1662              	.L115:
 245:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR3;  // Clear the interrupt flag
 246:Core/Src/main.c ****         down();                   // Call the `down` function
 247:Core/Src/main.c ****     }
 248:Core/Src/main.c ****    }
 249:Core/Src/main.c **** }
 1663              		.loc 1 249 1 view .LVU429
 1664              		@ sp needed
 1665 0012 10BD     		pop	{r4, pc}
 1666              	.L118:
 245:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR3;  // Clear the interrupt flag
 1667              		.loc 1 245 9 is_stmt 1 view .LVU430
 245:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR3;  // Clear the interrupt flag
 1668              		.loc 1 245 13 is_stmt 0 view .LVU431
 1669 0014 044A     		ldr	r2, .L119+4
 1670 0016 5369     		ldr	r3, [r2, #20]
 245:Core/Src/main.c ****         EXTI->PR |= EXTI_PR_PR3;  // Clear the interrupt flag
 1671              		.loc 1 245 18 view .LVU432
 1672 0018 0821     		movs	r1, #8
 1673 001a 0B43     		orrs	r3, r1
 1674 001c 5361     		str	r3, [r2, #20]
 246:Core/Src/main.c ****     }
 1675              		.loc 1 246 9 is_stmt 1 view .LVU433
 1676 001e FFF7FEFF 		bl	down
 1677              	.LVL90:
 1678              		.loc 1 249 1 is_stmt 0 view .LVU434
 1679 0022 F6E7     		b	.L115
 1680              	.L120:
 1681              		.align	2
 1682              	.L119:
 1683 0024 00000000 		.word	notGameOver
 1684 0028 00040140 		.word	1073808384
 1685              		.cfi_endproc
 1686              	.LFE60:
 1688              		.section	.rodata.init_game.str1.4,"aMS",%progbits,1
 1689              		.align	2
 1690              	.LC20:
 1691 0000 57656C63 		.ascii	"Welcome to\000"
 1691      6F6D6520 
 1691      746F00
 1692 000b 00       		.align	2
 1693              	.LC22:
 1694 000c 76696B61 		.ascii	"vika ingozi !!!\000"
 1694      20696E67 
 1694      6F7A6920 
 1694      21212100 
 1695              		.align	2
 1696              	.LC24:
 1697 001c 45766164 		.ascii	"Evade arrows\000"
 1697      65206172 
 1697      726F7773 
 1697      00
 1698 0029 000000   		.align	2
 1699              	.LC26:
 1700 002c 616E6420 		.ascii	"and survive!!!\000"
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 57


 1700      73757276 
 1700      69766521 
 1700      212100
 1701 003b 00       		.align	2
 1702              	.LC28:
 1703 003c 5570203A 		.ascii	"Up : sw1\000"
 1703      20737731 
 1703      00
 1704 0045 000000   		.align	2
 1705              	.LC30:
 1706 0048 446F776E 		.ascii	"Down : sw3\000"
 1706      203A2073 
 1706      773300
 1707 0053 00       		.align	2
 1708              	.LC32:
 1709 0054 52656164 		.ascii	"Ready?\000"
 1709      793F00
 1710 005b 00       		.align	2
 1711              	.LC34:
 1712 005c 73746172 		.ascii	"start: sw2\000"
 1712      743A2073 
 1712      773200
 1713 0067 00       		.align	2
 1714              	.LC36:
 1715 0068 53746172 		.ascii	"Starting in\000"
 1715      74696E67 
 1715      20696E00 
 1716              		.align	2
 1717              	.LC38:
 1718 0074 203500   		.ascii	" 5\000"
 1719 0077 00       		.align	2
 1720              	.LC40:
 1721 0078 203400   		.ascii	" 4\000"
 1722 007b 00       		.align	2
 1723              	.LC42:
 1724 007c 203300   		.ascii	" 3\000"
 1725 007f 00       		.align	2
 1726              	.LC44:
 1727 0080 203200   		.ascii	" 2\000"
 1728 0083 00       		.align	2
 1729              	.LC46:
 1730 0084 203100   		.ascii	" 1\000"
 1731              		.section	.text.init_game,"ax",%progbits
 1732              		.align	1
 1733              		.global	init_game
 1734              		.syntax unified
 1735              		.code	16
 1736              		.thumb_func
 1738              	init_game:
 1739              	.LFB61:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** void init_game(){
 1740              		.loc 1 251 17 is_stmt 1 view -0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 58


 1745              		.cfi_def_cfa_offset 16
 1746              		.cfi_offset 4, -16
 1747              		.cfi_offset 5, -12
 1748              		.cfi_offset 6, -8
 1749              		.cfi_offset 14, -4
 252:Core/Src/main.c ****     lcd_command(CLEAR);
 1750              		.loc 1 252 5 view .LVU436
 1751 0002 0120     		movs	r0, #1
 1752 0004 FFF7FEFF 		bl	lcd_command
 1753              	.LVL91:
 253:Core/Src/main.c ****     lcd_putstring("Welcome to");
 1754              		.loc 1 253 5 view .LVU437
 1755 0008 4448     		ldr	r0, .L124
 1756 000a FFF7FEFF 		bl	lcd_putstring
 1757              	.LVL92:
 254:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1758              		.loc 1 254 5 view .LVU438
 1759 000e C020     		movs	r0, #192
 1760 0010 FFF7FEFF 		bl	lcd_command
 1761              	.LVL93:
 255:Core/Src/main.c ****     lcd_putstring("vika ingozi !!!");
 1762              		.loc 1 255 5 view .LVU439
 1763 0014 4248     		ldr	r0, .L124+4
 1764 0016 FFF7FEFF 		bl	lcd_putstring
 1765              	.LVL94:
 256:Core/Src/main.c ****     delay(300000);
 1766              		.loc 1 256 5 view .LVU440
 1767 001a 424C     		ldr	r4, .L124+8
 1768 001c 2000     		movs	r0, r4
 1769 001e FFF7FEFF 		bl	delay
 1770              	.LVL95:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     lcd_command(CLEAR);
 1771              		.loc 1 258 5 view .LVU441
 1772 0022 0120     		movs	r0, #1
 1773 0024 FFF7FEFF 		bl	lcd_command
 1774              	.LVL96:
 259:Core/Src/main.c ****     lcd_putstring("Evade arrows");
 1775              		.loc 1 259 5 view .LVU442
 1776 0028 3F48     		ldr	r0, .L124+12
 1777 002a FFF7FEFF 		bl	lcd_putstring
 1778              	.LVL97:
 260:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1779              		.loc 1 260 5 view .LVU443
 1780 002e C020     		movs	r0, #192
 1781 0030 FFF7FEFF 		bl	lcd_command
 1782              	.LVL98:
 261:Core/Src/main.c ****     lcd_putstring("and survive!!!");
 1783              		.loc 1 261 5 view .LVU444
 1784 0034 3D48     		ldr	r0, .L124+16
 1785 0036 FFF7FEFF 		bl	lcd_putstring
 1786              	.LVL99:
 262:Core/Src/main.c ****     delay(300000);
 1787              		.loc 1 262 5 view .LVU445
 1788 003a 2000     		movs	r0, r4
 1789 003c FFF7FEFF 		bl	delay
 1790              	.LVL100:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 59


 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     lcd_command(CLEAR);
 1791              		.loc 1 264 5 view .LVU446
 1792 0040 0120     		movs	r0, #1
 1793 0042 FFF7FEFF 		bl	lcd_command
 1794              	.LVL101:
 265:Core/Src/main.c ****     lcd_putstring("Up : sw1");
 1795              		.loc 1 265 5 view .LVU447
 1796 0046 3A48     		ldr	r0, .L124+20
 1797 0048 FFF7FEFF 		bl	lcd_putstring
 1798              	.LVL102:
 266:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1799              		.loc 1 266 5 view .LVU448
 1800 004c C020     		movs	r0, #192
 1801 004e FFF7FEFF 		bl	lcd_command
 1802              	.LVL103:
 267:Core/Src/main.c ****     lcd_putstring("Down : sw3");
 1803              		.loc 1 267 5 view .LVU449
 1804 0052 3848     		ldr	r0, .L124+24
 1805 0054 FFF7FEFF 		bl	lcd_putstring
 1806              	.LVL104:
 268:Core/Src/main.c ****     delay(300000);
 1807              		.loc 1 268 5 view .LVU450
 1808 0058 2000     		movs	r0, r4
 1809 005a FFF7FEFF 		bl	delay
 1810              	.LVL105:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     lcd_command(CLEAR);
 1811              		.loc 1 270 5 view .LVU451
 1812 005e 0120     		movs	r0, #1
 1813 0060 FFF7FEFF 		bl	lcd_command
 1814              	.LVL106:
 271:Core/Src/main.c ****     lcd_putstring("Ready?");
 1815              		.loc 1 271 5 view .LVU452
 1816 0064 3448     		ldr	r0, .L124+28
 1817 0066 FFF7FEFF 		bl	lcd_putstring
 1818              	.LVL107:
 272:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1819              		.loc 1 272 5 view .LVU453
 1820 006a C020     		movs	r0, #192
 1821 006c FFF7FEFF 		bl	lcd_command
 1822              	.LVL108:
 273:Core/Src/main.c ****     lcd_putstring("start: sw2");
 1823              		.loc 1 273 5 view .LVU454
 1824 0070 3248     		ldr	r0, .L124+32
 1825 0072 FFF7FEFF 		bl	lcd_putstring
 1826              	.LVL109:
 274:Core/Src/main.c ****     while (SW2_Not_Pressed);
 1827              		.loc 1 274 5 view .LVU455
 1828              	.L122:
 1829              		.loc 1 274 12 discriminator 1 view .LVU456
 1830 0076 9023     		movs	r3, #144
 1831 0078 DB05     		lsls	r3, r3, #23
 1832 007a 1B69     		ldr	r3, [r3, #16]
 1833 007c 5B07     		lsls	r3, r3, #29
 1834 007e FAD4     		bmi	.L122
 275:Core/Src/main.c **** 
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 60


 276:Core/Src/main.c ****     lcd_command(CLEAR);
 1835              		.loc 1 276 5 view .LVU457
 1836 0080 0120     		movs	r0, #1
 1837 0082 FFF7FEFF 		bl	lcd_command
 1838              	.LVL110:
 277:Core/Src/main.c ****     lcd_putstring("Starting in");
 1839              		.loc 1 277 5 view .LVU458
 1840 0086 2E4D     		ldr	r5, .L124+36
 1841 0088 2800     		movs	r0, r5
 1842 008a FFF7FEFF 		bl	lcd_putstring
 1843              	.LVL111:
 278:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1844              		.loc 1 278 5 view .LVU459
 1845 008e C020     		movs	r0, #192
 1846 0090 FFF7FEFF 		bl	lcd_command
 1847              	.LVL112:
 279:Core/Src/main.c ****     lcd_putstring(" 5");
 1848              		.loc 1 279 5 view .LVU460
 1849 0094 2B48     		ldr	r0, .L124+40
 1850 0096 FFF7FEFF 		bl	lcd_putstring
 1851              	.LVL113:
 280:Core/Src/main.c ****     delay(150000);
 1852              		.loc 1 280 5 view .LVU461
 1853 009a 2B4C     		ldr	r4, .L124+44
 1854 009c 2000     		movs	r0, r4
 1855 009e FFF7FEFF 		bl	delay
 1856              	.LVL114:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     lcd_command(CLEAR);
 1857              		.loc 1 282 5 view .LVU462
 1858 00a2 0120     		movs	r0, #1
 1859 00a4 FFF7FEFF 		bl	lcd_command
 1860              	.LVL115:
 283:Core/Src/main.c ****     lcd_putstring("Starting in");
 1861              		.loc 1 283 5 view .LVU463
 1862 00a8 2800     		movs	r0, r5
 1863 00aa FFF7FEFF 		bl	lcd_putstring
 1864              	.LVL116:
 284:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1865              		.loc 1 284 5 view .LVU464
 1866 00ae C020     		movs	r0, #192
 1867 00b0 FFF7FEFF 		bl	lcd_command
 1868              	.LVL117:
 285:Core/Src/main.c ****     lcd_putstring(" 4");
 1869              		.loc 1 285 5 view .LVU465
 1870 00b4 2548     		ldr	r0, .L124+48
 1871 00b6 FFF7FEFF 		bl	lcd_putstring
 1872              	.LVL118:
 286:Core/Src/main.c ****     delay(150000);
 1873              		.loc 1 286 5 view .LVU466
 1874 00ba 2000     		movs	r0, r4
 1875 00bc FFF7FEFF 		bl	delay
 1876              	.LVL119:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     lcd_command(CLEAR);
 1877              		.loc 1 288 5 view .LVU467
 1878 00c0 0120     		movs	r0, #1
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 61


 1879 00c2 FFF7FEFF 		bl	lcd_command
 1880              	.LVL120:
 289:Core/Src/main.c ****     lcd_putstring("Starting in");
 1881              		.loc 1 289 5 view .LVU468
 1882 00c6 2800     		movs	r0, r5
 1883 00c8 FFF7FEFF 		bl	lcd_putstring
 1884              	.LVL121:
 290:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1885              		.loc 1 290 5 view .LVU469
 1886 00cc C020     		movs	r0, #192
 1887 00ce FFF7FEFF 		bl	lcd_command
 1888              	.LVL122:
 291:Core/Src/main.c ****     lcd_putstring(" 3");
 1889              		.loc 1 291 5 view .LVU470
 1890 00d2 1F48     		ldr	r0, .L124+52
 1891 00d4 FFF7FEFF 		bl	lcd_putstring
 1892              	.LVL123:
 292:Core/Src/main.c ****     delay(150000);
 1893              		.loc 1 292 5 view .LVU471
 1894 00d8 2000     		movs	r0, r4
 1895 00da FFF7FEFF 		bl	delay
 1896              	.LVL124:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     lcd_command(CLEAR);
 1897              		.loc 1 294 5 view .LVU472
 1898 00de 0120     		movs	r0, #1
 1899 00e0 FFF7FEFF 		bl	lcd_command
 1900              	.LVL125:
 295:Core/Src/main.c ****     lcd_putstring("Starting in");
 1901              		.loc 1 295 5 view .LVU473
 1902 00e4 2800     		movs	r0, r5
 1903 00e6 FFF7FEFF 		bl	lcd_putstring
 1904              	.LVL126:
 296:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1905              		.loc 1 296 5 view .LVU474
 1906 00ea C020     		movs	r0, #192
 1907 00ec FFF7FEFF 		bl	lcd_command
 1908              	.LVL127:
 297:Core/Src/main.c ****     lcd_putstring(" 2");
 1909              		.loc 1 297 5 view .LVU475
 1910 00f0 1848     		ldr	r0, .L124+56
 1911 00f2 FFF7FEFF 		bl	lcd_putstring
 1912              	.LVL128:
 298:Core/Src/main.c ****     delay(150000);
 1913              		.loc 1 298 5 view .LVU476
 1914 00f6 2000     		movs	r0, r4
 1915 00f8 FFF7FEFF 		bl	delay
 1916              	.LVL129:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****     lcd_command(CLEAR);
 1917              		.loc 1 300 5 view .LVU477
 1918 00fc 0120     		movs	r0, #1
 1919 00fe FFF7FEFF 		bl	lcd_command
 1920              	.LVL130:
 301:Core/Src/main.c ****     lcd_putstring("Starting in");
 1921              		.loc 1 301 5 view .LVU478
 1922 0102 2800     		movs	r0, r5
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 62


 1923 0104 FFF7FEFF 		bl	lcd_putstring
 1924              	.LVL131:
 302:Core/Src/main.c ****     lcd_command(LINE_TWO);
 1925              		.loc 1 302 5 view .LVU479
 1926 0108 C020     		movs	r0, #192
 1927 010a FFF7FEFF 		bl	lcd_command
 1928              	.LVL132:
 303:Core/Src/main.c ****     lcd_putstring(" 1");
 1929              		.loc 1 303 5 view .LVU480
 1930 010e 1248     		ldr	r0, .L124+60
 1931 0110 FFF7FEFF 		bl	lcd_putstring
 1932              	.LVL133:
 304:Core/Src/main.c ****     delay(150000);
 1933              		.loc 1 304 5 view .LVU481
 1934 0114 2000     		movs	r0, r4
 1935 0116 FFF7FEFF 		bl	delay
 1936              	.LVL134:
 305:Core/Src/main.c **** }
 1937              		.loc 1 305 1 is_stmt 0 view .LVU482
 1938              		@ sp needed
 1939 011a 70BD     		pop	{r4, r5, r6, pc}
 1940              	.L125:
 1941              		.align	2
 1942              	.L124:
 1943 011c 00000000 		.word	.LC20
 1944 0120 0C000000 		.word	.LC22
 1945 0124 E0930400 		.word	300000
 1946 0128 1C000000 		.word	.LC24
 1947 012c 2C000000 		.word	.LC26
 1948 0130 3C000000 		.word	.LC28
 1949 0134 48000000 		.word	.LC30
 1950 0138 54000000 		.word	.LC32
 1951 013c 5C000000 		.word	.LC34
 1952 0140 68000000 		.word	.LC36
 1953 0144 74000000 		.word	.LC38
 1954 0148 F0490200 		.word	150000
 1955 014c 78000000 		.word	.LC40
 1956 0150 7C000000 		.word	.LC42
 1957 0154 80000000 		.word	.LC44
 1958 0158 84000000 		.word	.LC46
 1959              		.cfi_endproc
 1960              	.LFE61:
 1962              		.section	.text.main,"ax",%progbits
 1963              		.align	1
 1964              		.global	main
 1965              		.syntax unified
 1966              		.code	16
 1967              		.thumb_func
 1969              	main:
 1970              	.LFB49:
  62:Core/Src/main.c **** 
 1971              		.loc 1 62 1 is_stmt 1 view -0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
 1975 0000 70B5     		push	{r4, r5, r6, lr}
 1976              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 63


 1977              		.cfi_offset 4, -16
 1978              		.cfi_offset 5, -12
 1979              		.cfi_offset 6, -8
 1980              		.cfi_offset 14, -4
  64:Core/Src/main.c **** 
 1981              		.loc 1 64 5 view .LVU484
 1982 0002 374A     		ldr	r2, .L134
 1983 0004 5169     		ldr	r1, [r2, #20]
 1984 0006 8023     		movs	r3, #128
 1985 0008 9B02     		lsls	r3, r3, #10
 1986 000a 0B43     		orrs	r3, r1
 1987 000c 5361     		str	r3, [r2, #20]
  64:Core/Src/main.c **** 
 1988              		.loc 1 64 13 view .LVU485
  66:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR1_0; //Pull up sw2
 1989              		.loc 1 66 5 view .LVU486
  66:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR1_0; //Pull up sw2
 1990              		.loc 1 66 11 is_stmt 0 view .LVU487
 1991 000e 9023     		movs	r3, #144
 1992 0010 DB05     		lsls	r3, r3, #23
 1993 0012 DA68     		ldr	r2, [r3, #12]
  66:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR1_0; //Pull up sw2
 1994              		.loc 1 66 20 view .LVU488
 1995 0014 1021     		movs	r1, #16
 1996 0016 0A43     		orrs	r2, r1
 1997 0018 DA60     		str	r2, [r3, #12]
  67:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR3_0; //Pull up sw2
 1998              		.loc 1 67 5 is_stmt 1 view .LVU489
  67:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR3_0; //Pull up sw2
 1999              		.loc 1 67 11 is_stmt 0 view .LVU490
 2000 001a DA68     		ldr	r2, [r3, #12]
  67:Core/Src/main.c ****     GPIOA -> PUPDR |= GPIO_PUPDR_PUPDR3_0; //Pull up sw2
 2001              		.loc 1 67 20 view .LVU491
 2002 001c 0C39     		subs	r1, r1, #12
 2003 001e 0A43     		orrs	r2, r1
 2004 0020 DA60     		str	r2, [r3, #12]
  68:Core/Src/main.c **** 
 2005              		.loc 1 68 5 is_stmt 1 view .LVU492
  68:Core/Src/main.c **** 
 2006              		.loc 1 68 11 is_stmt 0 view .LVU493
 2007 0022 DA68     		ldr	r2, [r3, #12]
  68:Core/Src/main.c **** 
 2008              		.loc 1 68 20 view .LVU494
 2009 0024 3C31     		adds	r1, r1, #60
 2010 0026 0A43     		orrs	r2, r1
 2011 0028 DA60     		str	r2, [r3, #12]
  70:Core/Src/main.c ****     uint16_t score = 0;
 2012              		.loc 1 70 5 is_stmt 1 view .LVU495
 2013 002a FFF7FEFF 		bl	init_LCD
 2014              	.LVL135:
  71:Core/Src/main.c **** 
 2015              		.loc 1 71 5 view .LVU496
  73:Core/Src/main.c ****     update_game();
 2016              		.loc 1 73 5 view .LVU497
 2017 002e FFF7FEFF 		bl	init_game
 2018              	.LVL136:
  74:Core/Src/main.c ****     init_interrupts();
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 64


 2019              		.loc 1 74 5 view .LVU498
 2020 0032 FFF7FEFF 		bl	update_game
 2021              	.LVL137:
  75:Core/Src/main.c ****     int maximum_speed = 100000;
 2022              		.loc 1 75 5 view .LVU499
 2023 0036 FFF7FEFF 		bl	init_interrupts
 2024              	.LVL138:
  76:Core/Src/main.c **** 
 2025              		.loc 1 76 5 view .LVU500
  76:Core/Src/main.c **** 
 2026              		.loc 1 76 9 is_stmt 0 view .LVU501
 2027 003a 2A4D     		ldr	r5, .L134+4
  71:Core/Src/main.c **** 
 2028              		.loc 1 71 14 view .LVU502
 2029 003c 0024     		movs	r4, #0
 2030 003e 00E0     		b	.L127
 2031              	.LVL139:
 2032              	.L133:
  95:Core/Src/main.c ****         }
 2033              		.loc 1 95 27 view .LVU503
 2034 0040 294D     		ldr	r5, .L134+8
 2035              	.LVL140:
 2036              	.L127:
  78:Core/Src/main.c ****         score++;
 2037              		.loc 1 78 5 is_stmt 1 view .LVU504
  79:Core/Src/main.c ****         delay(maximum_speed);
 2038              		.loc 1 79 9 view .LVU505
  79:Core/Src/main.c ****         delay(maximum_speed);
 2039              		.loc 1 79 14 is_stmt 0 view .LVU506
 2040 0042 0134     		adds	r4, r4, #1
 2041              	.LVL141:
  79:Core/Src/main.c ****         delay(maximum_speed);
 2042              		.loc 1 79 14 view .LVU507
 2043 0044 A4B2     		uxth	r4, r4
 2044              	.LVL142:
  80:Core/Src/main.c ****         new_state(score);
 2045              		.loc 1 80 9 is_stmt 1 view .LVU508
 2046 0046 2800     		movs	r0, r5
 2047 0048 FFF7FEFF 		bl	delay
 2048              	.LVL143:
  81:Core/Src/main.c ****         setScore(score);
 2049              		.loc 1 81 9 view .LVU509
 2050 004c 2000     		movs	r0, r4
 2051 004e FFF7FEFF 		bl	new_state
 2052              	.LVL144:
  82:Core/Src/main.c ****         if (score < 10){
 2053              		.loc 1 82 9 view .LVU510
 2054 0052 2000     		movs	r0, r4
 2055 0054 FFF7FEFF 		bl	setScore
 2056              	.LVL145:
  83:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *10000;
 2057              		.loc 1 83 9 view .LVU511
  83:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *10000;
 2058              		.loc 1 83 12 is_stmt 0 view .LVU512
 2059 0058 092C     		cmp	r4, #9
 2060 005a 16D8     		bhi	.L128
  84:Core/Src/main.c ****         }
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 65


 2061              		.loc 1 84 13 is_stmt 1 view .LVU513
  84:Core/Src/main.c ****         }
 2062              		.loc 1 84 32 is_stmt 0 view .LVU514
 2063 005c 2000     		movs	r0, r4
 2064 005e FFF7FEFF 		bl	__aeabi_ui2f
 2065              	.LVL146:
  84:Core/Src/main.c ****         }
 2066              		.loc 1 84 45 view .LVU515
 2067 0062 2249     		ldr	r1, .L134+12
 2068 0064 FFF7FEFF 		bl	__aeabi_fdiv
 2069              	.LVL147:
  84:Core/Src/main.c ****         }
 2070              		.loc 1 84 51 view .LVU516
 2071 0068 2149     		ldr	r1, .L134+16
 2072 006a FFF7FEFF 		bl	__aeabi_fmul
 2073              	.LVL148:
 2074 006e 061C     		adds	r6, r0, #0
  84:Core/Src/main.c ****         }
 2075              		.loc 1 84 27 view .LVU517
 2076 0070 2800     		movs	r0, r5
 2077 0072 FFF7FEFF 		bl	__aeabi_i2f
 2078              	.LVL149:
 2079 0076 311C     		adds	r1, r6, #0
 2080 0078 FFF7FEFF 		bl	__aeabi_fsub
 2081              	.LVL150:
 2082 007c FFF7FEFF 		bl	__aeabi_f2iz
 2083              	.LVL151:
 2084 0080 0500     		movs	r5, r0
 2085              	.LVL152:
 2086              	.L129:
  94:Core/Src/main.c ****             maximum_speed = 19000;
 2087              		.loc 1 94 9 is_stmt 1 view .LVU518
  94:Core/Src/main.c ****             maximum_speed = 19000;
 2088              		.loc 1 94 12 is_stmt 0 view .LVU519
 2089 0082 1C4B     		ldr	r3, .L134+20
 2090 0084 9D42     		cmp	r5, r3
 2091 0086 DBDD     		ble	.L133
 2092 0088 DBE7     		b	.L127
 2093              	.L128:
  86:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *5000;
 2094              		.loc 1 86 14 is_stmt 1 view .LVU520
  86:Core/Src/main.c ****             maximum_speed -=  ((float) score/100) *5000;
 2095              		.loc 1 86 16 is_stmt 0 view .LVU521
 2096 008a 1D2C     		cmp	r4, #29
 2097 008c 13D8     		bhi	.L130
  87:Core/Src/main.c **** 
 2098              		.loc 1 87 13 is_stmt 1 view .LVU522
  87:Core/Src/main.c **** 
 2099              		.loc 1 87 32 is_stmt 0 view .LVU523
 2100 008e 2000     		movs	r0, r4
 2101 0090 FFF7FEFF 		bl	__aeabi_ui2f
 2102              	.LVL153:
  87:Core/Src/main.c **** 
 2103              		.loc 1 87 45 view .LVU524
 2104 0094 1549     		ldr	r1, .L134+12
 2105 0096 FFF7FEFF 		bl	__aeabi_fdiv
 2106              	.LVL154:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 66


  87:Core/Src/main.c **** 
 2107              		.loc 1 87 51 view .LVU525
 2108 009a 1749     		ldr	r1, .L134+24
 2109 009c FFF7FEFF 		bl	__aeabi_fmul
 2110              	.LVL155:
 2111 00a0 061C     		adds	r6, r0, #0
  87:Core/Src/main.c **** 
 2112              		.loc 1 87 27 view .LVU526
 2113 00a2 2800     		movs	r0, r5
 2114 00a4 FFF7FEFF 		bl	__aeabi_i2f
 2115              	.LVL156:
 2116 00a8 311C     		adds	r1, r6, #0
 2117 00aa FFF7FEFF 		bl	__aeabi_fsub
 2118              	.LVL157:
 2119 00ae FFF7FEFF 		bl	__aeabi_f2iz
 2120              	.LVL158:
 2121 00b2 0500     		movs	r5, r0
 2122              	.LVL159:
  87:Core/Src/main.c **** 
 2123              		.loc 1 87 27 view .LVU527
 2124 00b4 E5E7     		b	.L129
 2125              	.LVL160:
 2126              	.L130:
  91:Core/Src/main.c ****         }
 2127              		.loc 1 91 13 is_stmt 1 view .LVU528
  91:Core/Src/main.c ****         }
 2128              		.loc 1 91 32 is_stmt 0 view .LVU529
 2129 00b6 2000     		movs	r0, r4
 2130 00b8 FFF7FEFF 		bl	__aeabi_ui2f
 2131              	.LVL161:
  91:Core/Src/main.c ****         }
 2132              		.loc 1 91 45 view .LVU530
 2133 00bc 0B49     		ldr	r1, .L134+12
 2134 00be FFF7FEFF 		bl	__aeabi_fdiv
 2135              	.LVL162:
  91:Core/Src/main.c ****         }
 2136              		.loc 1 91 51 view .LVU531
 2137 00c2 0E49     		ldr	r1, .L134+28
 2138 00c4 FFF7FEFF 		bl	__aeabi_fmul
 2139              	.LVL163:
 2140 00c8 061C     		adds	r6, r0, #0
  91:Core/Src/main.c ****         }
 2141              		.loc 1 91 27 view .LVU532
 2142 00ca 2800     		movs	r0, r5
 2143 00cc FFF7FEFF 		bl	__aeabi_i2f
 2144              	.LVL164:
 2145 00d0 311C     		adds	r1, r6, #0
 2146 00d2 FFF7FEFF 		bl	__aeabi_fsub
 2147              	.LVL165:
 2148 00d6 FFF7FEFF 		bl	__aeabi_f2iz
 2149              	.LVL166:
 2150 00da 0500     		movs	r5, r0
 2151              	.LVL167:
  91:Core/Src/main.c ****         }
 2152              		.loc 1 91 27 view .LVU533
 2153 00dc D1E7     		b	.L129
 2154              	.L135:
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 67


 2155 00de C046     		.align	2
 2156              	.L134:
 2157 00e0 00100240 		.word	1073876992
 2158 00e4 A0860100 		.word	100000
 2159 00e8 384A0000 		.word	19000
 2160 00ec 0000C842 		.word	1120403456
 2161 00f0 00401C46 		.word	1176256512
 2162 00f4 374A0000 		.word	18999
 2163 00f8 00409C45 		.word	1167867904
 2164 00fc 00007A44 		.word	1148846080
 2165              		.cfi_endproc
 2166              	.LFE49:
 2168              		.global	notGameOver
 2169              		.section	.data.notGameOver,"aw"
 2170              		.align	2
 2173              	notGameOver:
 2174 0000 01000000 		.word	1
 2175              		.global	line_two
 2176              		.section	.data.line_two,"aw"
 2177              		.align	2
 2180              	line_two:
 2181 0000 20202020 		.ascii	"               o\000"
 2181      20202020 
 2181      20202020 
 2181      2020206F 
 2181      00
 2182              		.global	line_one
 2183              		.section	.data.line_one,"aw"
 2184              		.align	2
 2187              	line_one:
 2188 0000 73636F72 		.ascii	"score: 000      \000"
 2188      653A2030 
 2188      30302020 
 2188      20202020 
 2188      00
 2189              		.text
 2190              	.Letext0:
 2191              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2192              		.file 5 "C:/Users/Philasande Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@x
 2193              		.file 6 "C:/Users/Philasande Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@x
 2194              		.file 7 "C:/Users/Philasande Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@x
 2195              		.file 8 "C:/Users/Philasande Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@x
 2196              		.file 9 "C:/Users/Philasande Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@x
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:19     .text.delay:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:25     .text.delay:00000000 delay
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:78     .text.pulse_strobe:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:84     .text.pulse_strobe:00000000 pulse_strobe
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:137    .text.pulse_strobe:00000034 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:142    .text.lcd_putchar:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:148    .text.lcd_putchar:00000000 lcd_putchar
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:396    .text.lcd_putchar:0000011c $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:402    .text.lcd_putstring:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:408    .text.lcd_putstring:00000000 lcd_putstring
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:459    .text.lcd_command:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:465    .text.lcd_command:00000000 lcd_command
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:717    .text.lcd_command:00000124 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:724    .text.init_LCD:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:730    .text.init_LCD:00000000 init_LCD
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:823    .text.init_LCD:00000070 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:831    .text.init_interrupts:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:837    .text.init_interrupts:00000000 init_interrupts
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:914    .text.init_interrupts:00000030 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:922    .text.update_game:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:928    .text.update_game:00000000 update_game
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:960    .text.update_game:0000001c $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2187   .data.line_one:00000000 line_one
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2180   .data.line_two:00000000 line_two
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:966    .rodata.setScore.str1.4:00000000 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:970    .text.setScore:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:976    .text.setScore:00000000 setScore
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1026   .text.setScore:00000028 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1032   .text.up_bad:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1038   .text.up_bad:00000000 up_bad
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1071   .text.up_bad:00000018 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1076   .rodata.gameOver.str1.4:00000000 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1083   .text.gameOver:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1089   .text.gameOver:00000000 gameOver
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1128   .text.gameOver:00000024 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2173   .data.notGameOver:00000000 notGameOver
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1135   .text.up:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1141   .text.up:00000000 up
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1182   .text.up:00000020 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1188   .text.down_bad:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1194   .text.down_bad:00000000 down_bad
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1227   .text.down_bad:00000018 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1232   .text.down:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1238   .text.down:00000000 down
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1279   .text.down:00000020 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1285   .text.new_state:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1291   .text.new_state:00000000 new_state
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1567   .text.new_state:000000f4 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1575   .text.EXTI0_1_IRQHandler:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1581   .text.EXTI0_1_IRQHandler:00000000 EXTI0_1_IRQHandler
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1626   .text.EXTI0_1_IRQHandler:00000024 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1632   .text.EXTI2_3_IRQHandler:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1638   .text.EXTI2_3_IRQHandler:00000000 EXTI2_3_IRQHandler
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1683   .text.EXTI2_3_IRQHandler:00000024 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1689   .rodata.init_game.str1.4:00000000 $d
ARM GAS  C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s 			page 69


C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1732   .text.init_game:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1738   .text.init_game:00000000 init_game
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1943   .text.init_game:0000011c $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1963   .text.main:00000000 $t
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:1969   .text.main:00000000 main
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2157   .text.main:000000e0 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2170   .data.notGameOver:00000000 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2177   .data.line_two:00000000 $d
C:\Users\PHILAS~1\AppData\Local\Temp\cc0ZoLsK.s:2184   .data.line_one:00000000 $d

UNDEFINED SYMBOLS
sprintf
__aeabi_uidiv
__aeabi_i2f
__aeabi_fmul
__aeabi_f2uiz
rand
__aeabi_idivmod
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fsub
__aeabi_f2iz
